2025-07-04 00:11:58.816 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 88489 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-04 00:11:58.919 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-04 00:12:02.584 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-04 00:12:02.592 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-04 00:12:03.235 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 631 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-04 00:12:04.498 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-04 00:12:04.502 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-04 00:12:04.637 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:12:04.639 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:12:04.642 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:12:04.645 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:12:04.648 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:12:04.649 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:12:04.652 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:12:04.653 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 129 ms. Found 0 Redis repository interfaces.
2025-07-04 00:12:09.349 [ INFO] [cluster-ClusterId{value='68669dc9b18eec5afcf06c1f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:12:09.368 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@51ed2f68, com.mongodb.Jep395RecordCodecProvider@538b3c88, com.mongodb.KotlinCodecProvider@19b9f903]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-04 00:12:09.409 [ INFO] [cluster-ClusterId{value='68669dc9b18eec5afcf06c1f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:12:09.455 [ INFO] [cluster-ClusterId{value='68669dc9b18eec5afcf06c1f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:12:11.448 [ INFO] [cluster-ClusterId{value='68669dc9b18eec5afcf06c1f', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1193776875, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Fri Jul 04 00:12:11 KST 2025, lastUpdateTimeNanos=902681348664832}
2025-07-04 00:12:11.448 [ INFO] [cluster-ClusterId{value='68669dc9b18eec5afcf06c1f', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1196748209, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Fri Jul 04 00:12:11 KST 2025, lastUpdateTimeNanos=902681348922999}
2025-07-04 00:12:11.450 [ INFO] [cluster-ClusterId{value='68669dc9b18eec5afcf06c1f', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1197653708, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Fri Jul 04 00:12:11 KST 2025, lastUpdateTimeNanos=902681348731916}
2025-07-04 00:12:11.459 [ INFO] [cluster-ClusterId{value='68669dc9b18eec5afcf06c1f', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-04 00:12:15.504 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-04 00:12:15.572 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 19.314 seconds (process running for 21.751)
2025-07-04 00:14:35.803 [ INFO] [parallel-3] org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2125 ms
2025-07-04 00:21:43.596 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 94496 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-04 00:21:43.603 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-04 00:21:46.001 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-04 00:21:46.005 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-04 00:21:46.390 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 379 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-04 00:21:47.020 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-04 00:21:47.021 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-04 00:21:47.094 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:21:47.095 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:21:47.097 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:21:47.097 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:21:47.097 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:21:47.098 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:21:47.098 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:21:47.099 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 0 Redis repository interfaces.
2025-07-04 00:21:50.922 [ INFO] [cluster-ClusterId{value='6866a00ecbb6231f45840730', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:21:50.941 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@18c7f6b5, com.mongodb.Jep395RecordCodecProvider@629b780f, com.mongodb.KotlinCodecProvider@3af36922]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-04 00:21:50.961 [ INFO] [cluster-ClusterId{value='6866a00ecbb6231f45840730', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:21:51.001 [ INFO] [cluster-ClusterId{value='6866a00ecbb6231f45840730', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:21:52.595 [ INFO] [cluster-ClusterId{value='6866a00ecbb6231f45840730', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1084452458, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Fri Jul 04 00:21:52 KST 2025, lastUpdateTimeNanos=903262512717791}
2025-07-04 00:21:52.595 [ INFO] [cluster-ClusterId{value='6866a00ecbb6231f45840730', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1084383500, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Fri Jul 04 00:21:52 KST 2025, lastUpdateTimeNanos=903262512708874}
2025-07-04 00:21:52.595 [ INFO] [cluster-ClusterId{value='6866a00ecbb6231f45840730', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1084529875, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Fri Jul 04 00:21:52 KST 2025, lastUpdateTimeNanos=903262512717791}
2025-07-04 00:21:52.613 [ INFO] [cluster-ClusterId{value='6866a00ecbb6231f45840730', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-04 00:21:56.110 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-04 00:21:56.164 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.255 seconds (process running for 15.694)
2025-07-04 00:22:45.899 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "test@test.com"}, Fields: {}, Sort: {}
2025-07-04 00:22:45.942 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "test@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-04 00:22:46.683 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - Inserting Document containing fields: [_id, email, password, phoneNumber, name, nickName, memberRole, createdAt] in collection: member
2025-07-04 00:34:06.985 [ INFO] [reactor-http-nio-4] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-04 00:34:07.037 [DEBUG] [reactor-http-nio-4] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-04 00:34:07.047 [DEBUG] [reactor-http-nio-4] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-04 00:34:22.231 [DEBUG] [reactor-http-nio-5] org.springframework.data.mongodb.core.ReactiveMongoTemplate - Calling update using query: { "_id" : { "$oid" : "6866a046cbb6231f45840731"}} and update: { "$set" : { "academicInfo" : [{ "educationLevel" : "UNDERGRADUATE_4", "schoolName" : "인하대학교", "major" : "컴퓨터소프트웨어과", "educationStatus" : "GRADUATED", "admissionDate" : { "$date" : "2025-07-03T06:30:15.311Z"}, "graduationDate" : { "$date" : "2025-07-03T06:30:15.311Z"}}], "certificateInfo" : [{ "certificateName" : "정보처리기사", "issuer" : "한국산업인력공단", "passStatus" : "FINAL_PASS", "passDate" : { "$date" : "2025-07-03T06:30:15.311Z"}}], "jobInfo" : { "jobCode" : "JOB_DEV_PM"}, "careerInfo" : [{ "companyName" : "카카오", "department" : "개발부", "position" : "TEAM_LEADER", "joinDate" : "202301", "retireDate" : "202312", "isWorking" : true}], "mentorIntroduction" : "안녕하세요 저는 멘토입니다. 무엇이 궁금하십니까? 몇자를 더 채워볼까요 저는 개발자를 하고 있지만 정말 피곤합니다. 안녕히계세요. 이상입니다. ", "updatedAt" : { "$date" : "2025-07-03T15:34:22.118Z"}, "updatedMemberId" : { "$oid" : "6866a046cbb6231f45840731"}}} in collection: member
2025-07-04 00:38:03.617 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 4734 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-04 00:38:03.624 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-04 00:38:05.917 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-04 00:38:05.920 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-04 00:38:06.297 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 372 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-04 00:38:06.908 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-04 00:38:06.910 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-04 00:38:06.979 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:38:06.980 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:38:06.982 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:38:06.983 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:38:06.983 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:38:06.983 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:38:06.983 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:38:06.984 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 67 ms. Found 0 Redis repository interfaces.
2025-07-04 00:38:10.631 [ INFO] [cluster-ClusterId{value='6866a3e2fc3fab70f90b5717', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:38:10.640 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@474e34e4, com.mongodb.Jep395RecordCodecProvider@7e2c6702, com.mongodb.KotlinCodecProvider@5fb7ab9c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-04 00:38:10.677 [ INFO] [cluster-ClusterId{value='6866a3e2fc3fab70f90b5717', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:38:10.716 [ INFO] [cluster-ClusterId{value='6866a3e2fc3fab70f90b5717', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:38:12.398 [ INFO] [cluster-ClusterId{value='6866a3e2fc3fab70f90b5717', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1128719583, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Fri Jul 04 00:38:12 KST 2025, lastUpdateTimeNanos=904242350826374}
2025-07-04 00:38:12.401 [ INFO] [cluster-ClusterId{value='6866a3e2fc3fab70f90b5717', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1131815625, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Fri Jul 04 00:38:12 KST 2025, lastUpdateTimeNanos=904242353062666}
2025-07-04 00:38:12.398 [ INFO] [cluster-ClusterId{value='6866a3e2fc3fab70f90b5717', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1117670792, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Fri Jul 04 00:38:12 KST 2025, lastUpdateTimeNanos=904242342134499}
2025-07-04 00:38:12.408 [ INFO] [cluster-ClusterId{value='6866a3e2fc3fab70f90b5717', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-04 00:38:15.664 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-04 00:38:15.710 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 13.598 seconds (process running for 14.965)
2025-07-04 00:39:31.238 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - Calling update using query: { "_id" : { "$oid" : "6866a046cbb6231f45840731"}} and update: { "$set" : { "academicInfo" : [{ "educationLevel" : "UNDERGRADUATE_4", "schoolName" : "인하대학교", "major" : "컴퓨터소프트웨어과", "educationStatus" : "GRADUATED", "admissionDate" : { "$date" : "2025-07-03T06:30:15.311Z"}, "graduationDate" : { "$date" : "2025-07-03T06:30:15.311Z"}}], "certificateInfo" : [{ "certificateName" : "정보처리기사", "issuer" : "한국산업인력공단", "passStatus" : "FINAL_PASS", "passDate" : { "$date" : "2025-07-03T06:30:15.311Z"}}], "jobInfo" : { "jobCode" : "JOB_DEV_PM"}, "careerInfo" : [{ "companyName" : "카카오", "department" : "개발부", "position" : "TEAM_LEADER", "joinDate" : "202301", "retireDate" : "202312", "isWorking" : true}], "mentorIntroduction" : "안녕하세요 저는 멘토입니다. 무엇이 궁금하십니까? 몇자를 더 채워볼까요 저는 개발자를 하고 있지만 정말 피곤합니다. 안녕히계세요. 이상입니다. ", "updatedAt" : { "$date" : "2025-07-03T15:39:31.006Z"}, "updatedMemberId" : { "$oid" : "6866a046cbb6231f45840731"}}} in collection: member
2025-07-04 00:57:13.067 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 16355 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-04 00:57:13.076 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-04 00:57:15.554 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-04 00:57:15.557 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-04 00:57:15.904 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 341 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-04 00:57:16.596 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-04 00:57:16.598 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-04 00:57:16.676 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:57:16.677 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:57:16.679 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:57:16.679 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:57:16.680 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:57:16.680 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:57:16.680 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-04 00:57:16.681 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 75 ms. Found 0 Redis repository interfaces.
2025-07-04 00:57:20.456 [ INFO] [cluster-ClusterId{value='6866a8608a51cb37f792f7c7', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:57:20.473 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@91a2543, com.mongodb.Jep395RecordCodecProvider@42730828, com.mongodb.KotlinCodecProvider@18c7f6b5]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-04 00:57:20.496 [ INFO] [cluster-ClusterId{value='6866a8608a51cb37f792f7c7', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:57:20.526 [ INFO] [cluster-ClusterId{value='6866a8608a51cb37f792f7c7', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-04 00:57:22.264 [ INFO] [cluster-ClusterId{value='6866a8608a51cb37f792f7c7', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1229956625, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Fri Jul 04 00:57:22 KST 2025, lastUpdateTimeNanos=905392242509749}
2025-07-04 00:57:22.264 [ INFO] [cluster-ClusterId{value='6866a8608a51cb37f792f7c7', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1230563833, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Fri Jul 04 00:57:22 KST 2025, lastUpdateTimeNanos=905392242376291}
2025-07-04 00:57:22.264 [ INFO] [cluster-ClusterId{value='6866a8608a51cb37f792f7c7', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1237512458, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Fri Jul 04 00:57:22 KST 2025, lastUpdateTimeNanos=905392247428416}
2025-07-04 00:57:22.280 [ INFO] [cluster-ClusterId{value='6866a8608a51cb37f792f7c7', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-04 00:57:25.773 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-04 00:57:25.824 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.348 seconds (process running for 15.689)
2025-07-04 00:58:12.768 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-04 00:58:12.835 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-04 00:58:13.514 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - Inserting Document containing fields: [_id, email, password, phoneNumber, name, nickName, memberRole, createdAt] in collection: member
2025-07-04 00:58:23.653 [ INFO] [reactor-http-nio-4] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-04 00:58:23.677 [DEBUG] [reactor-http-nio-4] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-04 00:58:23.679 [DEBUG] [reactor-http-nio-4] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-04 00:58:49.493 [DEBUG] [reactor-http-nio-5] org.springframework.data.mongodb.core.ReactiveMongoTemplate - Inserting Document containing fields: [_id, memberId, mentorIntroduction, academicInfo, certificateInfo, jobInfo, careerInfo, createdAt, createdMemberId] in collection: mentoInfo
