2025-03-03 13:27:43.384 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 7584 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-03-03 13:27:43.436 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-03-03 13:27:45.845 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 13:27:45.849 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-03-03 13:27:46.256 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 400 ms. Found 5 Reactive MongoDB repository interfaces.
2025-03-03 13:27:46.849 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 13:27:46.851 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-03 13:27:46.931 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.category.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:27:46.932 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.item.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:27:46.932 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:27:46.936 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.member.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:27:46.938 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.mentoring.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:27:46.939 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 73 ms. Found 0 Redis repository interfaces.
2025-03-03 13:27:49.831 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6629643d, com.mongodb.Jep395RecordCodecProvider@2dd178f3, com.mongodb.KotlinCodecProvider@64656b9e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-03-03 13:27:49.873 [ INFO] [cluster-ClusterId{value='67c52fc5b574ff79b8357635', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 13:27:49.967 [ INFO] [cluster-ClusterId{value='67c52fc5b574ff79b8357635', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 13:27:50.027 [ INFO] [cluster-ClusterId{value='67c52fc5b574ff79b8357635', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 13:27:51.895 [ INFO] [cluster-ClusterId{value='67c52fc5b574ff79b8357635', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1241119375, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf491c5b25fbd35c0e7f0b, counter=4}, lastWriteDate=Mon Mar 03 13:27:51 KST 2025, lastUpdateTimeNanos=514891401875333}
2025-03-03 13:27:51.895 [ INFO] [cluster-ClusterId{value='67c52fc5b574ff79b8357635', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1244162000, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf49707d4355c0f94005bd, counter=3}, lastWriteDate=Mon Mar 03 13:27:51 KST 2025, lastUpdateTimeNanos=514891409040958}
2025-03-03 13:27:51.897 [ INFO] [cluster-ClusterId{value='67c52fc5b574ff79b8357635', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1246320792, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000007c, setVersion=6, topologyVersion=TopologyVersion{processId=67bf4946afd3fe56aab3c645, counter=6}, lastWriteDate=Mon Mar 03 13:27:51 KST 2025, lastUpdateTimeNanos=514891410896500}
2025-03-03 13:27:51.902 [ INFO] [cluster-ClusterId{value='67c52fc5b574ff79b8357635', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-01.0mtmr.mongodb.net:27017 with max election id 7fffffff000000000000007c and max set version 6
2025-03-03 13:27:56.119 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-03-03 13:27:56.181 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.486 seconds (process running for 15.856)
2025-03-03 13:40:27.465 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 15649 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-03-03 13:40:27.474 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-03-03 13:40:29.344 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 13:40:29.355 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-03-03 13:40:29.979 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 556 ms. Found 5 Reactive MongoDB repository interfaces.
2025-03-03 13:40:30.650 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 13:40:30.652 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-03 13:40:30.734 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.category.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:40:30.736 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.item.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:40:30.736 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:40:30.738 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.member.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:40:30.738 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.mentoring.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:40:30.739 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 70 ms. Found 0 Redis repository interfaces.
2025-03-03 13:40:33.619 [ INFO] [cluster-ClusterId{value='67c532c110c8456786b5d3e9', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 13:40:33.626 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@37606fee, com.mongodb.Jep395RecordCodecProvider@33d28f0a, com.mongodb.KotlinCodecProvider@48d739f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-03-03 13:40:33.670 [ INFO] [cluster-ClusterId{value='67c532c110c8456786b5d3e9', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 13:40:33.724 [ INFO] [cluster-ClusterId{value='67c532c110c8456786b5d3e9', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 13:40:35.539 [ INFO] [cluster-ClusterId{value='67c532c110c8456786b5d3e9', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1174412208, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf491c5b25fbd35c0e7f0b, counter=4}, lastWriteDate=Mon Mar 03 13:40:35 KST 2025, lastUpdateTimeNanos=515655049724667}
2025-03-03 13:40:35.539 [ INFO] [cluster-ClusterId{value='67c532c110c8456786b5d3e9', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1174878334, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000007c, setVersion=6, topologyVersion=TopologyVersion{processId=67bf4946afd3fe56aab3c645, counter=6}, lastWriteDate=Mon Mar 03 13:40:35 KST 2025, lastUpdateTimeNanos=515655050032875}
2025-03-03 13:40:35.539 [ INFO] [cluster-ClusterId{value='67c532c110c8456786b5d3e9', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1190780125, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf49707d4355c0f94005bd, counter=3}, lastWriteDate=Mon Mar 03 13:40:35 KST 2025, lastUpdateTimeNanos=515655062445208}
2025-03-03 13:40:35.554 [ INFO] [cluster-ClusterId{value='67c532c110c8456786b5d3e9', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-01.0mtmr.mongodb.net:27017 with max election id 7fffffff000000000000007c and max set version 6
2025-03-03 13:40:39.779 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-03-03 13:40:39.836 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.065 seconds (process running for 15.371)
2025-03-03 13:47:03.216 [ INFO] [parallel-8] org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2396 ms
2025-03-03 13:49:47.882 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 21512 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-03-03 13:49:47.888 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-03-03 13:49:49.943 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 13:49:49.954 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-03-03 13:49:50.620 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 598 ms. Found 5 Reactive MongoDB repository interfaces.
2025-03-03 13:49:51.291 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 13:49:51.293 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-03 13:49:51.381 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.category.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:49:51.382 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.item.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:49:51.383 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:49:51.385 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.member.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:49:51.385 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.mentoring.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 13:49:51.386 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 0 Redis repository interfaces.
2025-03-03 13:49:54.225 [ INFO] [cluster-ClusterId{value='67c534f279f9784cdd2948ef', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 13:49:54.240 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@20349058, com.mongodb.Jep395RecordCodecProvider@6cbb7a7d, com.mongodb.KotlinCodecProvider@cdb3c85]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-03-03 13:49:54.280 [ INFO] [cluster-ClusterId{value='67c534f279f9784cdd2948ef', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 13:49:54.347 [ INFO] [cluster-ClusterId{value='67c534f279f9784cdd2948ef', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 13:49:56.219 [ INFO] [cluster-ClusterId{value='67c534f279f9784cdd2948ef', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1234446583, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf49707d4355c0f94005bd, counter=3}, lastWriteDate=Mon Mar 03 13:49:56 KST 2025, lastUpdateTimeNanos=516215759288000}
2025-03-03 13:49:56.220 [ INFO] [cluster-ClusterId{value='67c534f279f9784cdd2948ef', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1228863416, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf491c5b25fbd35c0e7f0b, counter=4}, lastWriteDate=Mon Mar 03 13:49:56 KST 2025, lastUpdateTimeNanos=516215754119375}
2025-03-03 13:49:56.219 [ INFO] [cluster-ClusterId{value='67c534f279f9784cdd2948ef', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1229153708, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000007c, setVersion=6, topologyVersion=TopologyVersion{processId=67bf4946afd3fe56aab3c645, counter=6}, lastWriteDate=Mon Mar 03 13:49:56 KST 2025, lastUpdateTimeNanos=516215754119375}
2025-03-03 13:49:56.241 [ INFO] [cluster-ClusterId{value='67c534f279f9784cdd2948ef', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-01.0mtmr.mongodb.net:27017 with max election id 7fffffff000000000000007c and max set version 6
2025-03-03 13:50:00.441 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-03-03 13:50:00.488 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.135 seconds (process running for 15.338)
2025-03-03 14:31:48.825 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 48021 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-03-03 14:31:48.831 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-03-03 14:31:51.093 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 14:31:51.104 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-03-03 14:31:51.727 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 556 ms. Found 5 Reactive MongoDB repository interfaces.
2025-03-03 14:31:52.396 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 14:31:52.398 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-03 14:31:52.490 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.category.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:31:52.492 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.item.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:31:52.492 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:31:52.494 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.member.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:31:52.494 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.mentoring.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:31:52.495 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 0 Redis repository interfaces.
2025-03-03 14:31:55.500 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@8641b7d, com.mongodb.Jep395RecordCodecProvider@37c7766e, com.mongodb.KotlinCodecProvider@3fb450d7]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-03-03 14:31:55.504 [ INFO] [cluster-ClusterId{value='67c53ecb2a722f68102afa4f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 14:31:55.565 [ INFO] [cluster-ClusterId{value='67c53ecb2a722f68102afa4f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 14:31:55.664 [ INFO] [cluster-ClusterId{value='67c53ecb2a722f68102afa4f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 14:31:57.636 [ INFO] [cluster-ClusterId{value='67c53ecb2a722f68102afa4f', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1242256375, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf491c5b25fbd35c0e7f0b, counter=4}, lastWriteDate=Mon Mar 03 14:31:57 KST 2025, lastUpdateTimeNanos=518737315831458}
2025-03-03 14:31:57.637 [ INFO] [cluster-ClusterId{value='67c53ecb2a722f68102afa4f', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1246556917, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf49707d4355c0f94005bd, counter=3}, lastWriteDate=Mon Mar 03 14:31:57 KST 2025, lastUpdateTimeNanos=518737320595458}
2025-03-03 14:31:57.637 [ INFO] [cluster-ClusterId{value='67c53ecb2a722f68102afa4f', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1250054416, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000007c, setVersion=6, topologyVersion=TopologyVersion{processId=67bf4946afd3fe56aab3c645, counter=6}, lastWriteDate=Mon Mar 03 14:31:57 KST 2025, lastUpdateTimeNanos=518737323914875}
2025-03-03 14:31:57.650 [ INFO] [cluster-ClusterId{value='67c53ecb2a722f68102afa4f', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-01.0mtmr.mongodb.net:27017 with max election id 7fffffff000000000000007c and max set version 6
2025-03-03 14:32:01.945 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-03-03 14:32:02.001 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.844 seconds (process running for 16.385)
2025-03-03 14:32:32.083 [ INFO] [parallel-1] org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2197 ms
2025-03-03 14:32:40.133 [DEBUG] [parallel-2] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "categoryCode" : "JOB"} fields: Document{{}} for class: class pulse.back.entity.common.Item in collection: item
2025-03-03 14:32:42.823 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "JOB_GAME"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:32:42.864 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "JOB_DESIGN"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:32:42.870 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "JOB_DEVELOPMENT"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:32:42.873 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "JOB_PLANNING_MANAGEMENT_MARKETING"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:32:42.878 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "JOB_DATA"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:32:42.880 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "JOB_SECURITY_NETWORK"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:32:42.887 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "JOB_HARDWARE"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:32:42.890 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "JOB_AI"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:34:52.413 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 50158 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-03-03 14:34:52.419 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-03-03 14:34:54.371 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 14:34:54.385 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-03-03 14:34:55.036 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 568 ms. Found 5 Reactive MongoDB repository interfaces.
2025-03-03 14:34:55.681 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-03 14:34:55.683 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-03 14:34:55.772 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.category.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:34:55.773 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.item.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:34:55.774 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:34:55.776 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.member.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:34:55.776 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.mentoring.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-03 14:34:55.777 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 77 ms. Found 0 Redis repository interfaces.
2025-03-03 14:34:58.717 [ INFO] [cluster-ClusterId{value='67c53f823dbf514eb9eabf0e', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 14:34:58.726 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@42c12b3e, com.mongodb.Jep395RecordCodecProvider@2dbfa972, com.mongodb.KotlinCodecProvider@46f73ffa]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-03-03 14:34:58.856 [ INFO] [cluster-ClusterId{value='67c53f823dbf514eb9eabf0e', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 14:34:58.905 [ INFO] [cluster-ClusterId{value='67c53f823dbf514eb9eabf0e', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-03 14:35:00.911 [ INFO] [cluster-ClusterId{value='67c53f823dbf514eb9eabf0e', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1296731125, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf49707d4355c0f94005bd, counter=3}, lastWriteDate=Mon Mar 03 14:35:00 KST 2025, lastUpdateTimeNanos=518920590886167}
2025-03-03 14:35:00.912 [ INFO] [cluster-ClusterId{value='67c53f823dbf514eb9eabf0e', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1293846958, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000007c, setVersion=6, topologyVersion=TopologyVersion{processId=67bf4946afd3fe56aab3c645, counter=6}, lastWriteDate=Mon Mar 03 14:35:00 KST 2025, lastUpdateTimeNanos=518920590886167}
2025-03-03 14:35:00.911 [ INFO] [cluster-ClusterId{value='67c53f823dbf514eb9eabf0e', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1295736292, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf491c5b25fbd35c0e7f0b, counter=4}, lastWriteDate=Mon Mar 03 14:35:00 KST 2025, lastUpdateTimeNanos=518920591382333}
2025-03-03 14:35:00.933 [ INFO] [cluster-ClusterId{value='67c53f823dbf514eb9eabf0e', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-01.0mtmr.mongodb.net:27017 with max election id 7fffffff000000000000007c and max set version 6
2025-03-03 14:35:07.713 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-03-03 14:35:07.811 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 17.116 seconds (process running for 18.568)
2025-03-03 14:35:14.465 [ INFO] [parallel-1] org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 3108 ms
2025-03-03 14:35:36.653 [DEBUG] [parallel-6] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "categoryCode" : "REGION"} fields: Document{{}} for class: class pulse.back.entity.common.Item in collection: item
2025-03-03 14:35:37.211 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_SEOUL"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.215 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_INCHEON"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.216 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_DAEGU"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.217 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_DAEJEON"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.218 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_SEJONG"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.220 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GYEONGNAM"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.221 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_JEONNAM"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.222 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_CHUNGNAM"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.223 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_JEJU"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.223 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GYEONGGI"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.224 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_BUSAN"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.224 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GWANGJU"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.224 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_ULSAN"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.225 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GANGWON"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.225 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GYEONGBUK"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.225 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_JEONBUK"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.225 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_CHUNGBUK"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:37.226 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_ALL"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.069 [DEBUG] [parallel-7] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "categoryCode" : "REGION"} fields: Document{{}} for class: class pulse.back.entity.common.Item in collection: item
2025-03-03 14:35:57.150 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_SEOUL"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.151 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_INCHEON"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.152 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_DAEGU"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.153 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_DAEJEON"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.153 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_SEJONG"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.154 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GYEONGNAM"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.154 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_JEONNAM"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.154 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_CHUNGNAM"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.155 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_JEJU"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.156 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GYEONGGI"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.157 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_BUSAN"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.158 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GWANGJU"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.159 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_ULSAN"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.159 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GANGWON"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.159 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_GYEONGBUK"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.162 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_JEONBUK"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.163 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_CHUNGBUK"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-03 14:35:57.166 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "itemCode" : "REGION_ALL"} fields: Document{{}} for class: class pulse.back.entity.common.Meta in collection: meta
2025-03-06 22:01:47.668 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.5 with PID 27524 (C:\WorkSpace\pulse-back\build\classes\java\main started by mailo in C:\WorkSpace\pulse-back)
2025-03-06 22:01:47.670 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-03-06 22:01:48.318 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-06 22:01:48.318 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-03-06 22:01:48.510 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 187 ms. Found 5 Reactive MongoDB repository interfaces.
2025-03-06 22:01:48.804 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-06 22:01:48.805 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-06 22:01:48.831 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.category.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:01:48.832 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.item.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:01:48.832 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:01:48.833 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.member.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:01:48.833 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.mentoring.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:01:48.834 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 20 ms. Found 0 Redis repository interfaces.
2025-03-06 22:01:49.839 [ INFO] [cluster-ClusterId{value='67c99cbd575e962b6982613c', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-06 22:01:49.874 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./21.0.5+11-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@79f5a6ed, com.mongodb.Jep395RecordCodecProvider@722787b5, com.mongodb.KotlinCodecProvider@edb83f8]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-03-06 22:01:49.881 [ INFO] [cluster-ClusterId{value='67c99cbd575e962b6982613c', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-06 22:01:49.884 [ INFO] [cluster-ClusterId{value='67c99cbd575e962b6982613c', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-06 22:01:50.291 [ INFO] [cluster-ClusterId{value='67c99cbd575e962b6982613c', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=254371500, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf49707d4355c0f94005bd, counter=3}, lastWriteDate=Thu Mar 06 22:01:47 KST 2025, lastUpdateTimeNanos=85485146552800}
2025-03-06 22:01:50.291 [ INFO] [cluster-ClusterId{value='67c99cbd575e962b6982613c', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=253854100, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000007c, setVersion=6, topologyVersion=TopologyVersion{processId=67bf4946afd3fe56aab3c645, counter=6}, lastWriteDate=Thu Mar 06 22:01:47 KST 2025, lastUpdateTimeNanos=85485146427700}
2025-03-06 22:01:50.291 [ INFO] [cluster-ClusterId{value='67c99cbd575e962b6982613c', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=252713300, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf491c5b25fbd35c0e7f0b, counter=4}, lastWriteDate=Thu Mar 06 22:01:47 KST 2025, lastUpdateTimeNanos=85485146864500}
2025-03-06 22:01:50.294 [ INFO] [cluster-ClusterId{value='67c99cbd575e962b6982613c', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-01.0mtmr.mongodb.net:27017 with max election id 7fffffff000000000000007c and max set version 6
2025-03-06 22:01:52.144 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-03-06 22:01:52.152 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 5.811 seconds (process running for 7.533)
2025-03-06 22:02:38.290 [ INFO] [parallel-1] pulse.back.domain.chat.handler.AuthenticationHandler - token : eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2M5ODBhZWFkNmRmNDI2N2QzNzk0OGUiLCJhdXRoIjoiVVNFUiIsImV4cCI6MTc0MTI2ODM0NX0.YBFS08qWYIVmZ932B1XkyUy2b-q9dR_YFlGF9DqinFg
2025-03-06 22:03:07.639 [ INFO] [parallel-2] pulse.back.domain.chat.handler.AuthenticationHandler - token : eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2M5ODBhZWFkNmRmNDI2N2QzNzk0OGUiLCJhdXRoIjoiVVNFUiIsImV4cCI6MTc0MTI2ODM0NX0.YBFS08qWYIVmZ932B1XkyUy2b-q9dR_YFlGF9DqinFg
2025-03-06 22:03:30.138 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.5 with PID 27336 (C:\WorkSpace\pulse-back\build\classes\java\main started by mailo in C:\WorkSpace\pulse-back)
2025-03-06 22:03:30.141 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-03-06 22:03:30.885 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-06 22:03:30.885 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-03-06 22:03:31.076 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 185 ms. Found 5 Reactive MongoDB repository interfaces.
2025-03-06 22:03:31.359 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-03-06 22:03:31.361 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-03-06 22:03:31.386 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.category.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:03:31.387 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.item.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:03:31.387 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:03:31.388 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.member.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:03:31.388 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.mentoring.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-03-06 22:03:31.388 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 18 ms. Found 0 Redis repository interfaces.
2025-03-06 22:03:32.390 [ INFO] [cluster-ClusterId{value='67c99d24274d30450f10a909', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-06 22:03:32.429 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Windows", "name": "Windows 11", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Amazon.com Inc./21.0.5+11-LTS"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6df11e91, com.mongodb.Jep395RecordCodecProvider@1002d192, com.mongodb.KotlinCodecProvider@9281d19]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-03-06 22:03:32.436 [ INFO] [cluster-ClusterId{value='67c99d24274d30450f10a909', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-06 22:03:32.439 [ INFO] [cluster-ClusterId{value='67c99d24274d30450f10a909', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-03-06 22:03:32.828 [ INFO] [cluster-ClusterId{value='67c99d24274d30450f10a909', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=233890900, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff000000000000007c, setVersion=6, topologyVersion=TopologyVersion{processId=67bf4946afd3fe56aab3c645, counter=6}, lastWriteDate=Thu Mar 06 22:03:29 KST 2025, lastUpdateTimeNanos=85587684073300}
2025-03-06 22:03:32.828 [ INFO] [cluster-ClusterId{value='67c99d24274d30450f10a909', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=234319200, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf491c5b25fbd35c0e7f0b, counter=4}, lastWriteDate=Thu Mar 06 22:03:29 KST 2025, lastUpdateTimeNanos=85587684073300}
2025-03-06 22:03:32.828 [ INFO] [cluster-ClusterId{value='67c99d24274d30450f10a909', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=233791400, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-01.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=6, topologyVersion=TopologyVersion{processId=67bf49707d4355c0f94005bd, counter=3}, lastWriteDate=Thu Mar 06 22:03:29 KST 2025, lastUpdateTimeNanos=85587684079200}
2025-03-06 22:03:32.832 [ INFO] [cluster-ClusterId{value='67c99d24274d30450f10a909', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-01.0mtmr.mongodb.net:27017 with max election id 7fffffff000000000000007c and max set version 6
2025-03-06 22:03:34.691 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-03-06 22:03:34.698 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 5.705 seconds (process running for 7.537)
2025-03-06 22:04:54.757 [ INFO] [parallel-1] pulse.back.domain.chat.handler.AuthenticationHandler - token : eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiI2N2M5ODBhZWFkNmRmNDI2N2QzNzk0OGUiLCJhdXRoIjoiVVNFUiIsImV4cCI6MTc0MTI2ODM0NX0.YBFS08qWYIVmZ932B1XkyUy2b-q9dR_YFlGF9DqinFg
2025-03-06 22:04:57.443 [ INFO] [reactor-http-nio-3] pulse.back.domain.chat.handler.ChatWebSocketHandler - MESSAGE : Hi
