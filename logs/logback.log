2025-07-07 20:08:43.114 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 98121 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-07 20:08:43.181 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-07 20:08:45.660 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 20:08:45.669 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-07 20:08:46.211 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 510 ms. Found 8 Reactive MongoDB repository interfaces.
2025-07-07 20:08:46.979 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 20:08:46.981 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-07 20:08:47.066 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:08:47.067 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:08:47.070 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:08:47.074 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:08:47.075 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:08:47.076 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringViewLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:08:47.081 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:08:47.082 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:08:47.084 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 0 Redis repository interfaces.
2025-07-07 20:08:50.519 [ INFO] [cluster-ClusterId{value='686baac2e1f2613d84791b15', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 20:08:50.565 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@7faa0680, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@4c635edc, com.mongodb.Jep395RecordCodecProvider@4245bf68, com.mongodb.KotlinCodecProvider@45bbc52f]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-07 20:08:50.605 [ INFO] [cluster-ClusterId{value='686baac2e1f2613d84791b15', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 20:08:50.638 [ INFO] [cluster-ClusterId{value='686baac2e1f2613d84791b15', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 20:08:56.028 [ INFO] [cluster-ClusterId{value='686baac2e1f2613d84791b15', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4509988416, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Mon Jul 07 20:08:54 KST 2025, lastUpdateTimeNanos=961873331967249}
2025-07-07 20:08:56.029 [ INFO] [cluster-ClusterId{value='686baac2e1f2613d84791b15', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4509183417, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Mon Jul 07 20:08:54 KST 2025, lastUpdateTimeNanos=961873331240791}
2025-07-07 20:08:56.029 [ INFO] [cluster-ClusterId{value='686baac2e1f2613d84791b15', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4516716792, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Mon Jul 07 20:08:54 KST 2025, lastUpdateTimeNanos=961873338902458}
2025-07-07 20:08:56.167 [ INFO] [cluster-ClusterId{value='686baac2e1f2613d84791b15', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-07 20:09:06.310 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-07 20:09:06.361 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 25.04 seconds (process running for 26.413)
2025-07-07 20:12:01.039 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 280 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-07 20:12:01.048 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-07 20:12:03.374 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 20:12:03.377 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-07 20:12:03.839 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 456 ms. Found 8 Reactive MongoDB repository interfaces.
2025-07-07 20:12:04.615 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 20:12:04.617 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-07 20:12:04.768 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:12:04.775 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:12:04.783 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:12:04.784 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:12:04.790 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:12:04.792 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringViewLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:12:04.794 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:12:04.798 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:12:04.800 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 168 ms. Found 0 Redis repository interfaces.
2025-07-07 20:12:08.933 [ INFO] [cluster-ClusterId{value='686bab885db5d362c1693ea2', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 20:12:08.956 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@4703c998, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@71166348, com.mongodb.Jep395RecordCodecProvider@6d874695, com.mongodb.KotlinCodecProvider@20bb85b4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-07 20:12:08.984 [ INFO] [cluster-ClusterId{value='686bab885db5d362c1693ea2', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 20:12:09.021 [ INFO] [cluster-ClusterId{value='686bab885db5d362c1693ea2', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 20:12:11.218 [ INFO] [cluster-ClusterId{value='686bab885db5d362c1693ea2', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1305382083, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Mon Jul 07 20:12:11 KST 2025, lastUpdateTimeNanos=962068617013249}
2025-07-07 20:12:11.218 [ INFO] [cluster-ClusterId{value='686bab885db5d362c1693ea2', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1304318625, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Mon Jul 07 20:12:11 KST 2025, lastUpdateTimeNanos=962068617112749}
2025-07-07 20:12:11.218 [ INFO] [cluster-ClusterId{value='686bab885db5d362c1693ea2', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1305357583, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Mon Jul 07 20:12:11 KST 2025, lastUpdateTimeNanos=962068617134166}
2025-07-07 20:12:11.237 [ INFO] [cluster-ClusterId{value='686bab885db5d362c1693ea2', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-07 20:12:16.221 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-07 20:12:16.324 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 16.93 seconds (process running for 18.352)
2025-07-07 20:14:35.535 [DEBUG] [parallel-1] org.springframework.data.mongodb.core.ReactiveMongoTemplate - Executing count: {} in collection: mentoring
2025-07-07 20:14:35.538 [DEBUG] [parallel-1] org.springframework.data.mongodb.core.ReactiveMongoTemplate - Executing count: {} in collection: mentoring
2025-07-07 20:14:36.477 [DEBUG] [nioEventLoopGroup-3-7] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: {} fields: Document{{}} for class: class pulse.back.entity.mentoring.Mentoring in collection: mentoring
2025-07-07 20:14:36.697 [DEBUG] [nioEventLoopGroup-3-7] org.springframework.data.mongodb.core.ReactiveMongoTemplate - findOne using query: { "id" : { "$oid" : "686a69158f711616a2a5fb93"}} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-07 20:14:36.706 [DEBUG] [nioEventLoopGroup-3-7] org.springframework.data.mongodb.core.ReactiveMongoTemplate - findOne using query: { "memberId" : { "$oid" : "686a69158f711616a2a5fb93"}} fields: Document{{}} for class: class pulse.back.entity.mento.MentoInfo in collection: mentoInfo
2025-07-07 20:32:02.270 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 12951 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-07 20:32:02.276 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-07 20:32:06.007 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 20:32:06.012 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-07 20:32:07.174 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 1152 ms. Found 8 Reactive MongoDB repository interfaces.
2025-07-07 20:32:08.340 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 20:32:08.342 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-07 20:32:08.430 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:32:08.432 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:32:08.435 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:32:08.435 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:32:08.436 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:32:08.436 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringViewLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:32:08.437 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:32:08.437 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 20:32:08.439 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 88 ms. Found 0 Redis repository interfaces.
2025-07-07 20:32:10.912 [ INFO] [cluster-ClusterId{value='686bb03a5289ec3a21705bc7', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 20:32:10.920 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@54c60202, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7889b4b9, com.mongodb.Jep395RecordCodecProvider@1e545821, com.mongodb.KotlinCodecProvider@12952aff]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-07 20:32:10.953 [ INFO] [cluster-ClusterId{value='686bb03a5289ec3a21705bc7', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 20:32:11.003 [ INFO] [cluster-ClusterId{value='686bb03a5289ec3a21705bc7', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 20:32:13.725 [ INFO] [cluster-ClusterId{value='686bb03a5289ec3a21705bc7', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1737231583, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Mon Jul 07 20:32:13 KST 2025, lastUpdateTimeNanos=963271172355833}
2025-07-07 20:32:13.725 [ INFO] [cluster-ClusterId{value='686bb03a5289ec3a21705bc7', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1724405333, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Mon Jul 07 20:32:13 KST 2025, lastUpdateTimeNanos=963271160319999}
2025-07-07 20:32:13.725 [ INFO] [cluster-ClusterId{value='686bb03a5289ec3a21705bc7', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1729773916, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Mon Jul 07 20:32:13 KST 2025, lastUpdateTimeNanos=963271160415541}
2025-07-07 20:32:13.745 [ INFO] [cluster-ClusterId{value='686bb03a5289ec3a21705bc7', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-07 20:32:20.386 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-07 20:32:20.453 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 19.82 seconds (process running for 21.19)
2025-07-07 20:34:09.109 [DEBUG] [parallel-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-07 20:34:09.159 [DEBUG] [parallel-1] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-07 21:14:48.640 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 39255 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-07 21:14:48.651 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-07 21:14:53.386 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 21:14:53.397 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-07 21:14:54.334 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 910 ms. Found 9 Reactive MongoDB repository interfaces.
2025-07-07 21:14:55.282 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 21:14:55.284 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-07 21:14:55.361 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:14:55.362 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:14:55.364 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:14:55.365 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:14:55.365 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringBookmarksRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:14:55.366 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:14:55.367 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringViewLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:14:55.367 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:14:55.367 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:14:55.368 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 0 Redis repository interfaces.
2025-07-07 21:14:57.680 [ INFO] [cluster-ClusterId{value='686bba4127d7807b09c6965b', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 21:14:57.706 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3b78c683, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7f5614f9, com.mongodb.Jep395RecordCodecProvider@480cbe2e, com.mongodb.KotlinCodecProvider@6c3f1658]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-07 21:14:57.733 [ INFO] [cluster-ClusterId{value='686bba4127d7807b09c6965b', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 21:14:57.779 [ INFO] [cluster-ClusterId{value='686bba4127d7807b09c6965b', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 21:14:59.843 [ INFO] [cluster-ClusterId{value='686bba4127d7807b09c6965b', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1173728250, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Mon Jul 07 21:14:59 KST 2025, lastUpdateTimeNanos=965837291698166}
2025-07-07 21:14:59.843 [ INFO] [cluster-ClusterId{value='686bba4127d7807b09c6965b', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1173536834, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Mon Jul 07 21:14:59 KST 2025, lastUpdateTimeNanos=965837291629541}
2025-07-07 21:14:59.843 [ INFO] [cluster-ClusterId{value='686bba4127d7807b09c6965b', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1173850125, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Mon Jul 07 21:14:59 KST 2025, lastUpdateTimeNanos=965837291930999}
2025-07-07 21:14:59.870 [ INFO] [cluster-ClusterId{value='686bba4127d7807b09c6965b', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-07 21:15:10.198 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-07 21:15:10.279 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 24.644 seconds (process running for 26.386)
2025-07-07 21:15:22.882 [ INFO] [reactor-http-nio-3] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-07 21:15:22.996 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-07 21:15:23.035 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-07 21:36:41.030 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 52620 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-07 21:36:41.038 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-07 21:36:43.807 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 21:36:43.810 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-07 21:36:44.216 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 397 ms. Found 9 Reactive MongoDB repository interfaces.
2025-07-07 21:36:44.926 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 21:36:44.928 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-07 21:36:45.003 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:36:45.004 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:36:45.006 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:36:45.006 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:36:45.006 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringBookmarksRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:36:45.007 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:36:45.007 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringViewLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:36:45.008 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:36:45.008 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 21:36:45.009 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 72 ms. Found 0 Redis repository interfaces.
2025-07-07 21:36:47.308 [ INFO] [cluster-ClusterId{value='686bbf5f26e9774b238b5120', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 21:36:47.328 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@2ee39e73, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76973a6, com.mongodb.Jep395RecordCodecProvider@71a4f441, com.mongodb.KotlinCodecProvider@24876a7e]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-07 21:36:47.348 [ INFO] [cluster-ClusterId{value='686bbf5f26e9774b238b5120', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 21:36:47.384 [ INFO] [cluster-ClusterId{value='686bbf5f26e9774b238b5120', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 21:36:49.548 [ INFO] [cluster-ClusterId{value='686bbf5f26e9774b238b5120', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1216623875, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Mon Jul 07 21:36:48 KST 2025, lastUpdateTimeNanos=967147033782999}
2025-07-07 21:36:49.547 [ INFO] [cluster-ClusterId{value='686bbf5f26e9774b238b5120', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1216329333, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Mon Jul 07 21:36:48 KST 2025, lastUpdateTimeNanos=967147033516083}
2025-07-07 21:36:49.571 [ INFO] [cluster-ClusterId{value='686bbf5f26e9774b238b5120', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1250839083, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Mon Jul 07 21:36:48 KST 2025, lastUpdateTimeNanos=967147067942791}
2025-07-07 21:36:49.578 [ INFO] [cluster-ClusterId{value='686bbf5f26e9774b238b5120', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-07 21:36:55.995 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-07 21:36:56.064 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 16.752 seconds (process running for 18.47)
2025-07-07 22:20:00.886 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 17058 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-07 22:20:00.892 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-07 22:20:03.329 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 22:20:03.332 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-07 22:20:03.756 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 418 ms. Found 9 Reactive MongoDB repository interfaces.
2025-07-07 22:20:04.393 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-07 22:20:04.394 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-07 22:20:04.472 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 22:20:04.473 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 22:20:04.474 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 22:20:04.474 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 22:20:04.475 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringBookmarksRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 22:20:04.475 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 22:20:04.476 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringViewLogRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 22:20:04.476 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 22:20:04.477 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-07 22:20:04.477 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 0 Redis repository interfaces.
2025-07-07 22:20:06.670 [ INFO] [cluster-ClusterId{value='686bc986c278d25cd81955d5', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 22:20:06.678 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams|spring-boot", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=null, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=NettyTransportSettings{eventLoopGroup=io.netty.channel.nio.NioEventLoopGroup@3b78c683, socketChannelClass=null, allocator=null, sslContext=null}, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7f5614f9, com.mongodb.Jep395RecordCodecProvider@480cbe2e, com.mongodb.KotlinCodecProvider@6c3f1658]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-07 22:20:06.707 [ INFO] [cluster-ClusterId{value='686bc986c278d25cd81955d5', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 22:20:06.748 [ INFO] [cluster-ClusterId{value='686bc986c278d25cd81955d5', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-07 22:20:08.897 [ INFO] [cluster-ClusterId{value='686bc986c278d25cd81955d5', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1233340667, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Mon Jul 07 22:20:08 KST 2025, lastUpdateTimeNanos=969746392321208}
2025-07-07 22:20:08.894 [ INFO] [cluster-ClusterId{value='686bc986c278d25cd81955d5', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1237382417, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Mon Jul 07 22:20:08 KST 2025, lastUpdateTimeNanos=969746392321166}
2025-07-07 22:20:08.894 [ INFO] [cluster-ClusterId{value='686bc986c278d25cd81955d5', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1233239708, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Mon Jul 07 22:20:08 KST 2025, lastUpdateTimeNanos=969746392344749}
2025-07-07 22:20:08.912 [ INFO] [cluster-ClusterId{value='686bc986c278d25cd81955d5', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-07 22:20:14.486 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-07 22:20:14.548 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 15.296 seconds (process running for 16.826)
2025-07-07 22:21:23.902 [ INFO] [reactor-http-nio-3] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-07 22:21:24.004 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-07 22:21:24.052 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-07 22:21:37.449 [DEBUG] [parallel-2] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "categoryCode" : "JOB"} fields: Document{{}} for class: class pulse.back.entity.common.Item in collection: item
2025-07-07 22:21:48.828 [DEBUG] [parallel-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-07 22:21:48.839 [DEBUG] [parallel-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-07 22:22:08.441 [DEBUG] [parallel-4] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "nickName" : "fvdf"}, Fields: {}, Sort: {}
2025-07-07 22:22:08.450 [DEBUG] [parallel-4] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "nickName" : "fvdf"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
