2025-07-06 19:53:21.203 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 34405 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 19:53:21.293 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 19:53:23.714 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 19:53:23.717 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 19:53:24.108 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 385 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 19:53:24.788 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 19:53:24.790 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 19:53:24.875 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 19:53:24.876 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 19:53:24.878 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 19:53:24.880 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 19:53:24.882 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 19:53:24.882 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 19:53:24.883 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 19:53:24.884 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 84 ms. Found 0 Redis repository interfaces.
2025-07-06 19:53:30.876 [ INFO] [cluster-ClusterId{value='686a55aa2bc3203e28b694fb', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 19:53:30.885 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@51ed2f68, com.mongodb.Jep395RecordCodecProvider@538b3c88, com.mongodb.KotlinCodecProvider@19b9f903]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 19:53:30.931 [ INFO] [cluster-ClusterId{value='686a55aa2bc3203e28b694fb', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 19:53:30.972 [ INFO] [cluster-ClusterId{value='686a55aa2bc3203e28b694fb', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 19:53:34.299 [ INFO] [cluster-ClusterId{value='686a55aa2bc3203e28b694fb', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2559807292, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 19:53:33 KST 2025, lastUpdateTimeNanos=936470088546041}
2025-07-06 19:53:34.299 [ INFO] [cluster-ClusterId{value='686a55aa2bc3203e28b694fb', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2540313792, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 19:53:33 KST 2025, lastUpdateTimeNanos=936470084156333}
2025-07-06 19:53:34.299 [ INFO] [cluster-ClusterId{value='686a55aa2bc3203e28b694fb', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2544669417, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 19:53:33 KST 2025, lastUpdateTimeNanos=936470088576666}
2025-07-06 19:53:34.313 [ INFO] [cluster-ClusterId{value='686a55aa2bc3203e28b694fb', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 20:06:41.472 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 43081 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 20:06:41.479 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 20:06:43.763 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:06:43.767 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 20:06:44.137 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 364 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 20:06:44.823 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:06:44.824 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 20:06:44.907 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:06:44.908 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:06:44.910 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:06:44.911 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:06:44.911 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:06:44.911 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:06:44.912 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:06:44.913 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 80 ms. Found 0 Redis repository interfaces.
2025-07-06 20:06:48.765 [ INFO] [cluster-ClusterId{value='686a58c80487df74b1cedb63', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:06:48.779 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@474e34e4, com.mongodb.Jep395RecordCodecProvider@7e2c6702, com.mongodb.KotlinCodecProvider@5fb7ab9c]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 20:06:48.807 [ INFO] [cluster-ClusterId{value='686a58c80487df74b1cedb63', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:06:48.852 [ INFO] [cluster-ClusterId{value='686a58c80487df74b1cedb63', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:06:50.587 [ INFO] [cluster-ClusterId{value='686a58c80487df74b1cedb63', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1219503958, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 20:06:50 KST 2025, lastUpdateTimeNanos=937266407321249}
2025-07-06 20:06:50.587 [ INFO] [cluster-ClusterId{value='686a58c80487df74b1cedb63', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1221747875, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 20:06:50 KST 2025, lastUpdateTimeNanos=937266407323416}
2025-07-06 20:06:50.598 [ INFO] [cluster-ClusterId{value='686a58c80487df74b1cedb63', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 20:06:50.594 [ INFO] [cluster-ClusterId{value='686a58c80487df74b1cedb63', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1236594333, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 20:06:50 KST 2025, lastUpdateTimeNanos=937266423485333}
2025-07-06 20:06:54.070 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 20:06:54.138 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.432 seconds (process running for 15.846)
2025-07-06 20:16:13.654 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 49049 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 20:16:13.660 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 20:16:16.048 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:16:16.051 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 20:16:16.402 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 345 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 20:16:17.277 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:16:17.279 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 20:16:17.365 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:16:17.367 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:16:17.369 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:16:17.369 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:16:17.369 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:16:17.369 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:16:17.370 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:16:17.370 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 74 ms. Found 0 Redis repository interfaces.
2025-07-06 20:16:21.211 [ INFO] [cluster-ClusterId{value='686a5b05dd1d626e72cbe220', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:16:21.236 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@6ee37ca7, com.mongodb.Jep395RecordCodecProvider@6775c0d1, com.mongodb.KotlinCodecProvider@38f617f4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 20:16:21.262 [ INFO] [cluster-ClusterId{value='686a5b05dd1d626e72cbe220', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:16:21.302 [ INFO] [cluster-ClusterId{value='686a5b05dd1d626e72cbe220', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:16:22.976 [ INFO] [cluster-ClusterId{value='686a5b05dd1d626e72cbe220', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1130966667, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 20:16:22 KST 2025, lastUpdateTimeNanos=937838736959249}
2025-07-06 20:16:22.976 [ INFO] [cluster-ClusterId{value='686a5b05dd1d626e72cbe220', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1135877500, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 20:16:22 KST 2025, lastUpdateTimeNanos=937838744017499}
2025-07-06 20:16:22.976 [ INFO] [cluster-ClusterId{value='686a5b05dd1d626e72cbe220', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1128954208, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 20:16:22 KST 2025, lastUpdateTimeNanos=937838737345624}
2025-07-06 20:16:23.005 [ INFO] [cluster-ClusterId{value='686a5b05dd1d626e72cbe220', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 20:16:26.531 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 20:16:26.593 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.605 seconds (process running for 15.947)
2025-07-06 20:23:13.989 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 53580 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 20:23:13.994 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 20:23:16.607 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:23:16.611 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 20:23:16.982 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 365 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 20:23:17.702 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:23:17.704 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 20:23:17.852 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:17.854 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:17.856 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:17.856 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:17.857 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:17.857 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:17.857 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:17.858 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 143 ms. Found 0 Redis repository interfaces.
2025-07-06 20:23:21.974 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@40dd552c, com.mongodb.Jep395RecordCodecProvider@33f4c769, com.mongodb.KotlinCodecProvider@4ebd6fd6]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 20:23:21.973 [ INFO] [cluster-ClusterId{value='686a5ca9629dd3794bcd1e2f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:23:22.029 [ INFO] [cluster-ClusterId{value='686a5ca9629dd3794bcd1e2f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:23:22.075 [ INFO] [cluster-ClusterId{value='686a5ca9629dd3794bcd1e2f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:23:22.113 [ INFO] [cluster-ClusterId{value='686a5ca9629dd3794bcd1e2f', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Exception in monitor thread while connecting to server cluster-shard-00-00.0mtmr.mongodb.net:27017
com.mongodb.MongoSocketException: cluster-shard-00-00.0mtmr.mongodb.net
	at com.mongodb.ServerAddress.getSocketAddress(ServerAddress.java:198)
	at com.mongodb.internal.connection.ServerAddressWithResolver.getSocketAddress(ServerAddressWithResolver.java:58)
	at com.mongodb.connection.TlsChannelStreamFactoryFactory$TlsChannelStream.openAsync(TlsChannelStreamFactoryFactory.java:219)
	at com.mongodb.internal.connection.AsynchronousChannelStream.open(AsynchronousChannelStream.java:130)
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:211)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:193)
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:153)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: cluster-shard-00-00.0mtmr.mongodb.net
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1191)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at java.base/java.net.InetAddress.getByName(InetAddress.java:1568)
	at com.mongodb.ServerAddress.getSocketAddress(ServerAddress.java:196)
	... 7 common frames omitted
2025-07-06 20:23:24.210 [ INFO] [cluster-ClusterId{value='686a5ca9629dd3794bcd1e2f', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1466355333, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 20:23:24 KST 2025, lastUpdateTimeNanos=938259982337291}
2025-07-06 20:23:24.210 [ INFO] [cluster-ClusterId{value='686a5ca9629dd3794bcd1e2f', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1466627000, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 20:23:24 KST 2025, lastUpdateTimeNanos=938259982829041}
2025-07-06 20:23:24.219 [ INFO] [cluster-ClusterId{value='686a5ca9629dd3794bcd1e2f', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 20:23:28.560 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 20:23:28.608 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 17.645 seconds (process running for 19.446)
2025-07-06 20:23:32.369 [ INFO] [cluster-ClusterId{value='686a5ca9629dd3794bcd1e2f', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=218703958, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 20:23:32 KST 2025, lastUpdateTimeNanos=938268148493124}
2025-07-06 20:23:43.625 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 53908 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 20:23:43.629 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 20:23:46.005 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:23:46.008 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 20:23:46.369 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 354 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 20:23:47.333 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:23:47.336 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 20:23:47.427 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:47.429 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:47.432 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:47.433 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:47.434 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:47.436 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:47.437 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:23:47.440 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 0 Redis repository interfaces.
2025-07-06 20:23:51.768 [ INFO] [cluster-ClusterId{value='686a5cc72a27a9326603f28f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:23:51.787 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1c6e3ff9, com.mongodb.Jep395RecordCodecProvider@76e6c070, com.mongodb.KotlinCodecProvider@184afb78]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 20:23:51.811 [ INFO] [cluster-ClusterId{value='686a5cc72a27a9326603f28f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:23:51.866 [ INFO] [cluster-ClusterId{value='686a5cc72a27a9326603f28f', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:23:53.573 [ INFO] [cluster-ClusterId{value='686a5cc72a27a9326603f28f', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1245296125, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 20:23:53 KST 2025, lastUpdateTimeNanos=938289342174541}
2025-07-06 20:23:53.574 [ INFO] [cluster-ClusterId{value='686a5cc72a27a9326603f28f', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1236984834, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 20:23:53 KST 2025, lastUpdateTimeNanos=938289336076541}
2025-07-06 20:23:53.573 [ INFO] [cluster-ClusterId{value='686a5cc72a27a9326603f28f', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1238897333, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 20:23:53 KST 2025, lastUpdateTimeNanos=938289335494416}
2025-07-06 20:23:53.584 [ INFO] [cluster-ClusterId{value='686a5cc72a27a9326603f28f', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 20:23:57.702 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 20:23:57.758 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 15.79 seconds (process running for 17.028)
2025-07-06 20:24:31.730 [ INFO] [reactor-http-nio-3] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-06 20:24:31.845 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 20:24:31.888 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 20:24:32.395 [ERROR] [async-channel-group-0-handler-executor] org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler - [5b021413-1]  500 Server Error for HTTP POST "/api/v1/members/login"
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.util.Date] to type [java.time.OffsetDateTime]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler pulse.back.domain.member.MemberController#login(MemberLoginRequestDto, ServerWebExchange) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LogoutPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LoginPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryAuthenticationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.oauth2.client.web.server.OAuth2AuthorizationRequestRedirectWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.web.cors.reactive.CorsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/members/login" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1829)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1821)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1357)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1331)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2369)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2175)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1941)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:2000)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1959)
		at org.springframework.data.mapping.model.PersistentEntityParameterValueProvider.getParameterValue(PersistentEntityParameterValueProvider.java:71)
		at org.springframework.data.mapping.model.SpELExpressionParameterValueProvider.getParameterValue(SpELExpressionParameterValueProvider.java:49)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.extractInvocationArguments(ClassGeneratingEntityInstantiator.java:301)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$EntityInstantiatorAdapter.createInstance(ClassGeneratingEntityInstantiator.java:273)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:519)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:487)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.project(MappingMongoConverter.java:314)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ProjectingReadCallback.doWith(ReactiveMongoTemplate.java:3160)
		at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:208)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
		at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$5(BatchCursorFlux.java:102)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$1(BatchCursor.java:50)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:178)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$2(BatchCursor.java:42)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4578)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4339)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:112)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:61)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$33(MongoOperationPublisher.java:525)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:94)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:116)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.operation.FindOperation.lambda$exceptionTransformingCallback$6(FindOperation.java:369)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$transformingReadCallback$19(AsyncOperationHelper.java:442)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.lambda$executeAsync$0(DefaultServer.java:249)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.CommandProtocolImpl.lambda$executeAsync$0(CommandProtocolImpl.java:88)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.lambda$sendAndReceiveAsync$1(DefaultConnectionPool.java:802)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection.lambda$sendAndReceiveAsync$1(UsageTrackingInternalConnection.java:155)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.InternalStreamConnection.lambda$sendCommandMessageAsync$0(InternalStreamConnection.java:555)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:849)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:812)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:671)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:668)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:252)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:235)
		at com.mongodb.internal.connection.tlschannel.async.AsynchronousTlsChannel.lambda$read$4(AsynchronousTlsChannel.java:122)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-06 20:26:18.796 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 55604 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 20:26:18.803 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 20:26:21.120 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:26:21.123 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 20:26:21.465 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 337 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 20:26:22.133 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:26:22.134 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 20:26:22.215 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:26:22.217 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:26:22.218 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:26:22.219 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:26:22.219 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:26:22.219 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:26:22.219 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:26:22.220 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 78 ms. Found 0 Redis repository interfaces.
2025-07-06 20:26:25.922 [ INFO] [cluster-ClusterId{value='686a5d61f520db3d8bd029a5', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:26:25.929 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@18c7f6b5, com.mongodb.Jep395RecordCodecProvider@629b780f, com.mongodb.KotlinCodecProvider@3af36922]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 20:26:25.966 [ INFO] [cluster-ClusterId{value='686a5d61f520db3d8bd029a5', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:26:25.996 [ INFO] [cluster-ClusterId{value='686a5d61f520db3d8bd029a5', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:26:27.646 [ INFO] [cluster-ClusterId{value='686a5d61f520db3d8bd029a5', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1134827083, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 20:26:27 KST 2025, lastUpdateTimeNanos=938443419164374}
2025-07-06 20:26:27.646 [ INFO] [cluster-ClusterId{value='686a5d61f520db3d8bd029a5', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1136439500, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 20:26:27 KST 2025, lastUpdateTimeNanos=938443419280541}
2025-07-06 20:26:27.646 [ INFO] [cluster-ClusterId{value='686a5d61f520db3d8bd029a5', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1133325833, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 20:26:27 KST 2025, lastUpdateTimeNanos=938443419044833}
2025-07-06 20:26:27.657 [ INFO] [cluster-ClusterId{value='686a5d61f520db3d8bd029a5', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 20:26:30.923 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 20:26:30.974 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 13.715 seconds (process running for 15.02)
2025-07-06 20:28:07.767 [ INFO] [reactor-http-nio-3] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-06 20:28:08.018 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 20:28:08.163 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 20:28:08.751 [ERROR] [async-channel-group-0-handler-executor] org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler - [0109dc27-1]  500 Server Error for HTTP POST "/api/v1/members/login"
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.util.Date] to type [java.time.OffsetDateTime]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler pulse.back.domain.member.MemberController#login(MemberLoginRequestDto, ServerWebExchange) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LogoutPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LoginPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryAuthenticationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.oauth2.client.web.server.OAuth2AuthorizationRequestRedirectWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.web.cors.reactive.CorsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/members/login" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1829)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1821)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1357)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1331)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2369)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2175)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1941)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:2000)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1959)
		at org.springframework.data.mapping.model.PersistentEntityParameterValueProvider.getParameterValue(PersistentEntityParameterValueProvider.java:71)
		at org.springframework.data.mapping.model.SpELExpressionParameterValueProvider.getParameterValue(SpELExpressionParameterValueProvider.java:49)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.extractInvocationArguments(ClassGeneratingEntityInstantiator.java:301)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$EntityInstantiatorAdapter.createInstance(ClassGeneratingEntityInstantiator.java:273)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:519)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:487)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.project(MappingMongoConverter.java:314)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ProjectingReadCallback.doWith(ReactiveMongoTemplate.java:3160)
		at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:208)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
		at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$5(BatchCursorFlux.java:102)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$1(BatchCursor.java:50)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:178)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$2(BatchCursor.java:42)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4578)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4339)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:112)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:61)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$33(MongoOperationPublisher.java:525)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:94)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:116)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.operation.FindOperation.lambda$exceptionTransformingCallback$6(FindOperation.java:369)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$transformingReadCallback$19(AsyncOperationHelper.java:442)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.lambda$executeAsync$0(DefaultServer.java:249)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.CommandProtocolImpl.lambda$executeAsync$0(CommandProtocolImpl.java:88)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.lambda$sendAndReceiveAsync$1(DefaultConnectionPool.java:802)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection.lambda$sendAndReceiveAsync$1(UsageTrackingInternalConnection.java:155)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.InternalStreamConnection.lambda$sendCommandMessageAsync$0(InternalStreamConnection.java:555)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:849)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:812)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:671)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:668)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:252)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:235)
		at com.mongodb.internal.connection.tlschannel.async.AsynchronousTlsChannel.lambda$read$4(AsynchronousTlsChannel.java:122)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-06 20:28:31.019 [ INFO] [parallel-2] org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 3064 ms
2025-07-06 20:28:41.045 [ INFO] [reactor-http-nio-1] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-06 20:28:41.063 [DEBUG] [reactor-http-nio-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 20:28:41.076 [DEBUG] [reactor-http-nio-1] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 20:28:41.137 [ERROR] [async-channel-group-0-handler-executor] org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler - [6cc15c15-11]  500 Server Error for HTTP POST "/api/v1/members/login"
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.util.Date] to type [java.time.OffsetDateTime]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler pulse.back.domain.member.MemberController#login(MemberLoginRequestDto, ServerWebExchange) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LogoutPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LoginPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryAuthenticationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.oauth2.client.web.server.OAuth2AuthorizationRequestRedirectWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.web.cors.reactive.CorsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/members/login" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1829)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1821)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1357)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1331)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2369)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2175)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1941)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:2000)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1959)
		at org.springframework.data.mapping.model.PersistentEntityParameterValueProvider.getParameterValue(PersistentEntityParameterValueProvider.java:71)
		at org.springframework.data.mapping.model.SpELExpressionParameterValueProvider.getParameterValue(SpELExpressionParameterValueProvider.java:49)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.extractInvocationArguments(ClassGeneratingEntityInstantiator.java:301)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$EntityInstantiatorAdapter.createInstance(ClassGeneratingEntityInstantiator.java:273)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:519)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:487)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.project(MappingMongoConverter.java:314)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ProjectingReadCallback.doWith(ReactiveMongoTemplate.java:3160)
		at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:208)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
		at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$5(BatchCursorFlux.java:102)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$1(BatchCursor.java:50)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:178)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$2(BatchCursor.java:42)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4578)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4339)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:112)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:61)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$33(MongoOperationPublisher.java:525)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:94)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:116)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.operation.FindOperation.lambda$exceptionTransformingCallback$6(FindOperation.java:369)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$transformingReadCallback$19(AsyncOperationHelper.java:442)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.lambda$executeAsync$0(DefaultServer.java:249)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.CommandProtocolImpl.lambda$executeAsync$0(CommandProtocolImpl.java:88)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.lambda$sendAndReceiveAsync$1(DefaultConnectionPool.java:802)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection.lambda$sendAndReceiveAsync$1(UsageTrackingInternalConnection.java:155)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.InternalStreamConnection.lambda$sendCommandMessageAsync$0(InternalStreamConnection.java:555)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:849)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:812)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:671)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:668)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:252)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:235)
		at com.mongodb.internal.connection.tlschannel.async.AsynchronousTlsChannel.lambda$read$4(AsynchronousTlsChannel.java:122)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-06 20:34:37.619 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 60710 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 20:34:37.625 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 20:34:39.930 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:34:39.933 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 20:34:40.318 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 377 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 20:34:40.953 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:34:40.954 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 20:34:41.037 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:34:41.038 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:34:41.040 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:34:41.040 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:34:41.041 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:34:41.041 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:34:41.041 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:34:41.042 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 79 ms. Found 0 Redis repository interfaces.
2025-07-06 20:34:44.788 [ INFO] [cluster-ClusterId{value='686a5f542937012c59ee0c9c', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:34:44.801 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@7e2c6702, com.mongodb.Jep395RecordCodecProvider@5fb7ab9c, com.mongodb.KotlinCodecProvider@6734ff92]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 20:34:44.827 [ INFO] [cluster-ClusterId{value='686a5f542937012c59ee0c9c', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:34:44.860 [ INFO] [cluster-ClusterId{value='686a5f542937012c59ee0c9c', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:34:46.625 [ INFO] [cluster-ClusterId{value='686a5f542937012c59ee0c9c', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1173108750, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 20:34:46 KST 2025, lastUpdateTimeNanos=938942411259208}
2025-07-06 20:34:46.618 [ INFO] [cluster-ClusterId{value='686a5f542937012c59ee0c9c', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1162973583, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 20:34:46 KST 2025, lastUpdateTimeNanos=938942399729708}
2025-07-06 20:34:46.618 [ INFO] [cluster-ClusterId{value='686a5f542937012c59ee0c9c', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1161653750, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 20:34:46 KST 2025, lastUpdateTimeNanos=938942399730624}
2025-07-06 20:34:46.634 [ INFO] [cluster-ClusterId{value='686a5f542937012c59ee0c9c', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 20:34:50.602 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 20:34:50.655 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.601 seconds (process running for 16.007)
2025-07-06 20:35:23.466 [ INFO] [reactor-http-nio-3] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-06 20:35:23.575 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 20:35:23.616 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 20:35:24.091 [ERROR] [async-channel-group-0-handler-executor] org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler - [4cabb60a-1]  500 Server Error for HTTP POST "/api/v1/members/login"
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.util.Date] to type [java.time.OffsetDateTime]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler pulse.back.domain.member.MemberController#login(MemberLoginRequestDto, ServerWebExchange) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LogoutPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LoginPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryAuthenticationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.oauth2.client.web.server.OAuth2AuthorizationRequestRedirectWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.web.cors.reactive.CorsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/members/login" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1829)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1821)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1357)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1331)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2369)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2175)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1941)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:2000)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1959)
		at org.springframework.data.mapping.model.PersistentEntityParameterValueProvider.getParameterValue(PersistentEntityParameterValueProvider.java:71)
		at org.springframework.data.mapping.model.SpELExpressionParameterValueProvider.getParameterValue(SpELExpressionParameterValueProvider.java:49)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.extractInvocationArguments(ClassGeneratingEntityInstantiator.java:301)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$EntityInstantiatorAdapter.createInstance(ClassGeneratingEntityInstantiator.java:273)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:519)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:487)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.project(MappingMongoConverter.java:314)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ProjectingReadCallback.doWith(ReactiveMongoTemplate.java:3160)
		at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:208)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
		at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$5(BatchCursorFlux.java:102)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$1(BatchCursor.java:50)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:178)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$2(BatchCursor.java:42)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4578)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4339)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:112)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:61)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$33(MongoOperationPublisher.java:525)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:94)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:116)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.operation.FindOperation.lambda$exceptionTransformingCallback$6(FindOperation.java:369)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$transformingReadCallback$19(AsyncOperationHelper.java:442)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.lambda$executeAsync$0(DefaultServer.java:249)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.CommandProtocolImpl.lambda$executeAsync$0(CommandProtocolImpl.java:88)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.lambda$sendAndReceiveAsync$1(DefaultConnectionPool.java:802)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection.lambda$sendAndReceiveAsync$1(UsageTrackingInternalConnection.java:155)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.InternalStreamConnection.lambda$sendCommandMessageAsync$0(InternalStreamConnection.java:555)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:849)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:812)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:671)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:668)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:252)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:235)
		at com.mongodb.internal.connection.tlschannel.async.AsynchronousTlsChannel.lambda$read$4(AsynchronousTlsChannel.java:122)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-06 20:44:39.308 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 66840 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 20:44:39.313 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 20:44:41.599 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:44:41.602 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 20:44:41.955 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 346 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 20:44:42.714 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 20:44:42.715 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 20:44:42.794 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:44:42.795 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:44:42.797 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:44:42.798 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:44:42.798 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:44:42.798 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:44:42.798 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 20:44:42.799 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 0 Redis repository interfaces.
2025-07-06 20:44:47.409 [ INFO] [cluster-ClusterId{value='686a61afe704f876c14edbe0', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:44:47.417 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@609b041c, com.mongodb.Jep395RecordCodecProvider@474e34e4, com.mongodb.KotlinCodecProvider@7e2c6702]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 20:44:47.452 [ INFO] [cluster-ClusterId{value='686a61afe704f876c14edbe0', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:44:47.503 [ INFO] [cluster-ClusterId{value='686a61afe704f876c14edbe0', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 20:44:49.144 [ INFO] [cluster-ClusterId{value='686a61afe704f876c14edbe0', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1182706708, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 20:44:48 KST 2025, lastUpdateTimeNanos=939544978653541}
2025-07-06 20:44:49.144 [ INFO] [cluster-ClusterId{value='686a61afe704f876c14edbe0', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1181360791, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 20:44:48 KST 2025, lastUpdateTimeNanos=939544978345083}
2025-07-06 20:44:49.144 [ INFO] [cluster-ClusterId{value='686a61afe704f876c14edbe0', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1183004833, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 20:44:48 KST 2025, lastUpdateTimeNanos=939544978427333}
2025-07-06 20:44:49.158 [ INFO] [cluster-ClusterId{value='686a61afe704f876c14edbe0', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 20:44:52.534 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 20:44:52.586 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.903 seconds (process running for 16.242)
2025-07-06 20:48:23.072 [ INFO] [reactor-http-nio-3] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-06 20:48:23.199 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 20:48:23.247 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 20:48:23.853 [ERROR] [async-channel-group-0-handler-executor] org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler - [c621a021-1]  500 Server Error for HTTP POST "/api/v1/members/login"
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.util.Date] to type [java.time.OffsetDateTime]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler pulse.back.domain.member.MemberController#login(MemberLoginRequestDto, ServerWebExchange) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LogoutPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LoginPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryAuthenticationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.oauth2.client.web.server.OAuth2AuthorizationRequestRedirectWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.web.cors.reactive.CorsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/members/login" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1829)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1821)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1357)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1331)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2369)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2175)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1941)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:2000)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1959)
		at org.springframework.data.mapping.model.PersistentEntityParameterValueProvider.getParameterValue(PersistentEntityParameterValueProvider.java:71)
		at org.springframework.data.mapping.model.SpELExpressionParameterValueProvider.getParameterValue(SpELExpressionParameterValueProvider.java:49)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.extractInvocationArguments(ClassGeneratingEntityInstantiator.java:301)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$EntityInstantiatorAdapter.createInstance(ClassGeneratingEntityInstantiator.java:273)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:519)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:487)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.project(MappingMongoConverter.java:314)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ProjectingReadCallback.doWith(ReactiveMongoTemplate.java:3160)
		at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:208)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
		at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$5(BatchCursorFlux.java:102)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$1(BatchCursor.java:50)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:178)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$2(BatchCursor.java:42)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4578)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4339)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:112)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:61)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$33(MongoOperationPublisher.java:525)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:94)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:116)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.operation.FindOperation.lambda$exceptionTransformingCallback$6(FindOperation.java:369)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$transformingReadCallback$19(AsyncOperationHelper.java:442)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.lambda$executeAsync$0(DefaultServer.java:249)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.CommandProtocolImpl.lambda$executeAsync$0(CommandProtocolImpl.java:88)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.lambda$sendAndReceiveAsync$1(DefaultConnectionPool.java:802)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection.lambda$sendAndReceiveAsync$1(UsageTrackingInternalConnection.java:155)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.InternalStreamConnection.lambda$sendCommandMessageAsync$0(InternalStreamConnection.java:555)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:849)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:812)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:671)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:668)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:252)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:235)
		at com.mongodb.internal.connection.tlschannel.async.AsynchronousTlsChannel.lambda$read$4(AsynchronousTlsChannel.java:122)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-06 20:48:43.032 [ INFO] [parallel-2] org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 3023 ms
2025-07-06 20:48:53.447 [ INFO] [reactor-http-nio-1] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-06 20:48:53.469 [DEBUG] [reactor-http-nio-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 20:48:53.479 [DEBUG] [reactor-http-nio-1] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 20:48:53.516 [ERROR] [async-channel-group-0-handler-executor] org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler - [006fac06-11]  500 Server Error for HTTP POST "/api/v1/members/login"
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.util.Date] to type [java.time.OffsetDateTime]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler pulse.back.domain.member.MemberController#login(MemberLoginRequestDto, ServerWebExchange) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LogoutPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LoginPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryAuthenticationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.oauth2.client.web.server.OAuth2AuthorizationRequestRedirectWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.web.cors.reactive.CorsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/members/login" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1829)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1821)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1357)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1331)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2369)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2175)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1941)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:2000)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1959)
		at org.springframework.data.mapping.model.PersistentEntityParameterValueProvider.getParameterValue(PersistentEntityParameterValueProvider.java:71)
		at org.springframework.data.mapping.model.SpELExpressionParameterValueProvider.getParameterValue(SpELExpressionParameterValueProvider.java:49)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.extractInvocationArguments(ClassGeneratingEntityInstantiator.java:301)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$EntityInstantiatorAdapter.createInstance(ClassGeneratingEntityInstantiator.java:273)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:519)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:487)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.project(MappingMongoConverter.java:314)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ProjectingReadCallback.doWith(ReactiveMongoTemplate.java:3160)
		at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:208)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
		at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$5(BatchCursorFlux.java:102)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$1(BatchCursor.java:50)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:178)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$2(BatchCursor.java:42)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4578)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4339)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:112)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:61)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$33(MongoOperationPublisher.java:525)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:94)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:116)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.operation.FindOperation.lambda$exceptionTransformingCallback$6(FindOperation.java:369)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$transformingReadCallback$19(AsyncOperationHelper.java:442)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.lambda$executeAsync$0(DefaultServer.java:249)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.CommandProtocolImpl.lambda$executeAsync$0(CommandProtocolImpl.java:88)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.lambda$sendAndReceiveAsync$1(DefaultConnectionPool.java:802)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection.lambda$sendAndReceiveAsync$1(UsageTrackingInternalConnection.java:155)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.InternalStreamConnection.lambda$sendCommandMessageAsync$0(InternalStreamConnection.java:555)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:849)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:812)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:671)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:668)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:252)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:235)
		at com.mongodb.internal.connection.tlschannel.async.AsynchronousTlsChannel.lambda$read$4(AsynchronousTlsChannel.java:122)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-06 20:49:05.956 [ INFO] [reactor-http-nio-2] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-06 20:49:05.971 [DEBUG] [reactor-http-nio-2] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 20:49:05.975 [DEBUG] [reactor-http-nio-2] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 20:49:06.010 [ERROR] [async-channel-group-0-handler-executor] org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler - [e0c15ff1-12]  500 Server Error for HTTP POST "/api/v1/members/login"
org.springframework.core.convert.ConverterNotFoundException: No converter found capable of converting from type [java.util.Date] to type [java.time.OffsetDateTime]
	at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler pulse.back.domain.member.MemberController#login(MemberLoginRequestDto, ServerWebExchange) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LogoutPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LoginPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryAuthenticationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.oauth2.client.web.server.OAuth2AuthorizationRequestRedirectWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.web.cors.reactive.CorsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/members/login" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.springframework.core.convert.support.GenericConversionService.handleConverterNotFound(GenericConversionService.java:294)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:185)
		at org.springframework.core.convert.support.GenericConversionService.convert(GenericConversionService.java:165)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1829)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.doConvert(MappingMongoConverter.java:1821)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1357)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.getPotentiallyConvertedSimpleRead(MappingMongoConverter.java:1331)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$DefaultConversionContext.convert(MappingMongoConverter.java:2369)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$ConversionContext.convert(MappingMongoConverter.java:2175)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$MongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1941)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:2000)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter$AssociationAwareMongoDbPropertyValueProvider.getPropertyValue(MappingMongoConverter.java:1959)
		at org.springframework.data.mapping.model.PersistentEntityParameterValueProvider.getParameterValue(PersistentEntityParameterValueProvider.java:71)
		at org.springframework.data.mapping.model.SpELExpressionParameterValueProvider.getParameterValue(SpELExpressionParameterValueProvider.java:49)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.extractInvocationArguments(ClassGeneratingEntityInstantiator.java:301)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator$EntityInstantiatorAdapter.createInstance(ClassGeneratingEntityInstantiator.java:273)
		at org.springframework.data.mapping.model.ClassGeneratingEntityInstantiator.createInstance(ClassGeneratingEntityInstantiator.java:98)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:519)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.readDocument(MappingMongoConverter.java:487)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.read(MappingMongoConverter.java:423)
		at org.springframework.data.mongodb.core.convert.MappingMongoConverter.project(MappingMongoConverter.java:314)
		at org.springframework.data.mongodb.core.ReactiveMongoTemplate$ProjectingReadCallback.doWith(ReactiveMongoTemplate.java:3160)
		at reactor.core.publisher.FluxMergeSequential$MergeSequentialMain.onNext(FluxMergeSequential.java:208)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.drain(FluxCreate.java:880)
		at reactor.core.publisher.FluxCreate$BufferAsyncSink.next(FluxCreate.java:805)
		at reactor.core.publisher.FluxCreate$SerializedFluxSink.next(FluxCreate.java:163)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
		at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)
		at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)
		at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
		at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
		at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
		at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
		at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
		at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$recurseCursor$5(BatchCursorFlux.java:102)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:171)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$1(BatchCursor.java:50)
		at com.mongodb.internal.operation.AsyncQueryBatchCursor.next(AsyncQueryBatchCursor.java:178)
		at com.mongodb.reactivestreams.client.internal.BatchCursor.lambda$next$2(BatchCursor.java:42)
		at reactor.core.publisher.MonoCreate.subscribe(MonoCreate.java:61)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4512)
		at reactor.core.publisher.Mono.subscribeWith(Mono.java:4578)
		at reactor.core.publisher.Mono.subscribe(Mono.java:4339)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.recurseCursor(BatchCursorFlux.java:112)
		at com.mongodb.reactivestreams.client.internal.BatchCursorFlux.lambda$subscribe$0(BatchCursorFlux.java:61)
		at reactor.core.publisher.LambdaMonoSubscriber.onNext(LambdaMonoSubscriber.java:171)
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)
		at reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)
		at reactor.core.publisher.MonoCreate$DefaultMonoSink.success(MonoCreate.java:176)
		at com.mongodb.reactivestreams.client.internal.MongoOperationPublisher.lambda$sinkToCallback$33(MongoOperationPublisher.java:525)
		at com.mongodb.reactivestreams.client.internal.OperationExecutorImpl.lambda$execute$2(OperationExecutorImpl.java:94)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.function.RetryingAsyncCallbackSupplier$RetryingCallback.onResult(RetryingAsyncCallbackSupplier.java:116)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$1(AsyncCallbackSupplier.java:97)
		at com.mongodb.internal.operation.FindOperation.lambda$exceptionTransformingCallback$6(FindOperation.java:369)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$transformingReadCallback$19(AsyncOperationHelper.java:442)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.lambda$executeAsync$0(DefaultServer.java:249)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.CommandProtocolImpl.lambda$executeAsync$0(CommandProtocolImpl.java:88)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.lambda$sendAndReceiveAsync$1(DefaultConnectionPool.java:802)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection.lambda$sendAndReceiveAsync$1(UsageTrackingInternalConnection.java:155)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.InternalStreamConnection.lambda$sendCommandMessageAsync$0(InternalStreamConnection.java:555)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:849)
		at com.mongodb.internal.connection.InternalStreamConnection$MessageHeaderCallback$MessageCallback.onResult(InternalStreamConnection.java:812)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:671)
		at com.mongodb.internal.connection.InternalStreamConnection$3.completed(InternalStreamConnection.java:668)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:252)
		at com.mongodb.internal.connection.AsynchronousChannelStream$BasicCompletionHandler.completed(AsynchronousChannelStream.java:235)
		at com.mongodb.internal.connection.tlschannel.async.AsynchronousTlsChannel.lambda$read$4(AsynchronousTlsChannel.java:122)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-06 21:05:20.823 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 79476 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 21:05:20.831 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 21:05:23.278 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:05:23.281 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 21:05:23.658 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 371 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 21:05:24.327 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:05:24.328 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 21:05:24.411 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:05:24.412 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:05:24.414 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:05:24.414 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:05:24.414 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:05:24.415 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:05:24.415 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:05:24.415 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 76 ms. Found 0 Redis repository interfaces.
2025-07-06 21:05:28.166 [ INFO] [cluster-ClusterId{value='686a66882443307a9cd0d190', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 21:05:28.175 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@91a2543, com.mongodb.Jep395RecordCodecProvider@42730828, com.mongodb.KotlinCodecProvider@18c7f6b5]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 21:05:28.210 [ INFO] [cluster-ClusterId{value='686a66882443307a9cd0d190', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 21:05:28.250 [ INFO] [cluster-ClusterId{value='686a66882443307a9cd0d190', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 21:05:30.593 [ INFO] [cluster-ClusterId{value='686a66882443307a9cd0d190', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1759753458, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 21:05:30 KST 2025, lastUpdateTimeNanos=940786452860541}
2025-07-06 21:05:30.593 [ INFO] [cluster-ClusterId{value='686a66882443307a9cd0d190', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1760835959, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 21:05:30 KST 2025, lastUpdateTimeNanos=940786453272958}
2025-07-06 21:05:30.593 [ INFO] [cluster-ClusterId{value='686a66882443307a9cd0d190', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1760607833, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 21:05:30 KST 2025, lastUpdateTimeNanos=940786456573124}
2025-07-06 21:05:30.608 [ INFO] [cluster-ClusterId{value='686a66882443307a9cd0d190', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 21:05:35.174 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 21:05:35.225 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 16.06 seconds (process running for 17.458)
2025-07-06 21:05:53.487 [ INFO] [parallel-1] org.springdoc.api.AbstractOpenApiResource - Init duration for springdoc-openapi is: 2864 ms
2025-07-06 21:06:19.214 [DEBUG] [reactor-http-nio-1] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 21:06:19.264 [DEBUG] [reactor-http-nio-1] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 21:06:20.026 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - Inserting Document containing fields: [_id, email, password, phoneNumber, name, nickName, memberRole, createdAt] in collection: member
2025-07-06 21:06:20.087 [ERROR] [AsyncGetter-5-thread-1] org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler - [1022ff4b-10]  500 Server Error for HTTP POST "/api/v1/members/join"
org.bson.codecs.configuration.CodecConfigurationException: Can't find a codec for CodecCacheKey{clazz=class java.time.OffsetDateTime, types=null}.
	at org.bson.internal.ProvidersCodecRegistry.lambda$get$0(ProvidersCodecRegistry.java:87)
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint ⇢ Handler pulse.back.domain.member.MemberController#join(MemberJoinRequestDto, ServerWebExchange) [DispatcherHandler]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.AuthorizationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authorization.ExceptionTranslationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.authentication.logout.LogoutWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.savedrequest.ServerRequestCacheWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.SecurityContextServerWebExchangeWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LogoutPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.ui.LoginPageGeneratingWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryAuthenticationWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.oauth2.client.web.server.OAuth2AuthorizationRequestRedirectWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.context.ReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.web.cors.reactive.CorsWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$OAuth2LoginSpec$OidcSessionRegistryWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.header.HttpHeaderWriterWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.config.web.server.ServerHttpSecurity$ServerWebExchangeReactorContextWebFilter [DefaultWebFilterChain]
	*__checkpoint ⇢ org.springframework.security.web.server.WebFilterChainProxy [DefaultWebFilterChain]
	*__checkpoint ⇢ HTTP POST "/api/v1/members/join" [ExceptionHandlingWebHandler]
Original Stack Trace:
		at org.bson.internal.ProvidersCodecRegistry.lambda$get$0(ProvidersCodecRegistry.java:87)
		at java.base/java.util.Optional.orElseGet(Optional.java:364)
		at org.bson.internal.ProvidersCodecRegistry.get(ProvidersCodecRegistry.java:80)
		at org.bson.internal.ChildCodecRegistry.get(ChildCodecRegistry.java:68)
		at org.bson.codecs.DocumentCodec.writeValue(DocumentCodec.java:205)
		at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:164)
		at org.bson.codecs.DocumentCodec.encode(DocumentCodec.java:44)
		at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
		at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
		at com.mongodb.internal.connection.SplittablePayload$WriteRequestEncoder.encode(SplittablePayload.java:195)
		at com.mongodb.internal.connection.SplittablePayload$WriteRequestEncoder.encode(SplittablePayload.java:182)
		at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:63)
		at org.bson.codecs.BsonDocumentWrapperCodec.encode(BsonDocumentWrapperCodec.java:29)
		at com.mongodb.internal.connection.BsonWriterHelper.writeDocument(BsonWriterHelper.java:77)
		at com.mongodb.internal.connection.BsonWriterHelper.writePayload(BsonWriterHelper.java:59)
		at com.mongodb.internal.connection.CommandMessage.encodeMessageBodyWithMetadata(CommandMessage.java:162)
		at com.mongodb.internal.connection.RequestMessage.encode(RequestMessage.java:136)
		at com.mongodb.internal.connection.CommandMessage.encode(CommandMessage.java:59)
		at com.mongodb.internal.connection.InternalStreamConnection.sendAndReceiveAsync(InternalStreamConnection.java:492)
		at com.mongodb.internal.connection.UsageTrackingInternalConnection.sendAndReceiveAsync(UsageTrackingInternalConnection.java:157)
		at com.mongodb.internal.connection.DefaultConnectionPool$PooledConnection.sendAndReceiveAsync(DefaultConnectionPool.java:802)
		at com.mongodb.internal.connection.CommandProtocolImpl.executeAsync(CommandProtocolImpl.java:83)
		at com.mongodb.internal.connection.DefaultServer$DefaultServerProtocolExecutor.executeAsync(DefaultServer.java:232)
		at com.mongodb.internal.connection.DefaultServerConnection.executeProtocolAsync(DefaultServerConnection.java:122)
		at com.mongodb.internal.connection.DefaultServerConnection.commandAsync(DefaultServerConnection.java:102)
		at com.mongodb.internal.connection.DefaultServer$AsyncOperationCountTrackingConnection.commandAsync(DefaultServer.java:370)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.executeCommandAsync(MixedBulkWriteOperation.java:401)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeBulkWriteBatchAsync$8(MixedBulkWriteOperation.java:303)
		at com.mongodb.internal.async.function.AsyncCallbackLoop.run(AsyncCallbackLoop.java:56)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.executeBulkWriteBatchAsync(MixedBulkWriteOperation.java:337)
		at com.mongodb.internal.operation.MixedBulkWriteOperation.lambda$executeAsync$4(MixedBulkWriteOperation.java:246)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$withAsyncSourceAndConnection$0(AsyncOperationHelper.java:117)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$withAsyncSuppliedResource$2(AsyncOperationHelper.java:133)
		at com.mongodb.internal.async.function.AsyncCallbackSupplier.lambda$whenComplete$2(AsyncCallbackSupplier.java:101)
		at com.mongodb.internal.operation.AsyncOperationHelper.lambda$withAsyncSuppliedResource$3(AsyncOperationHelper.java:134)
		at com.mongodb.internal.connection.DefaultServer.lambda$getConnectionAsync$0(DefaultServer.java:130)
		at com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:47)
		at com.mongodb.internal.connection.DefaultConnectionPool.lambda$getAsync$0(DefaultConnectionPool.java:222)
		at com.mongodb.internal.connection.DefaultConnectionPool.lambda$getAsync$1(DefaultConnectionPool.java:245)
		at com.mongodb.internal.connection.DefaultConnectionPool$Task.doComplete(DefaultConnectionPool.java:1445)
		at com.mongodb.internal.connection.DefaultConnectionPool$Task.execute(DefaultConnectionPool.java:1431)
		at com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager.workerRun(DefaultConnectionPool.java:1375)
		at com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager.runAndLogUncaught(DefaultConnectionPool.java:1402)
		at com.mongodb.internal.connection.DefaultConnectionPool$AsyncWorkManager.lambda$initUnlessClosed$1(DefaultConnectionPool.java:1343)
		at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
		at java.base/java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:317)
		at java.base/java.util.concurrent.FutureTask.run(FutureTask.java)
		at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
		at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
		at java.base/java.lang.Thread.run(Thread.java:1583)
2025-07-06 21:12:44.924 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 84102 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 21:12:44.934 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 21:12:47.948 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:12:47.952 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 21:12:48.479 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 520 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 21:12:49.384 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:12:49.387 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 21:12:49.518 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:12:49.521 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:12:49.525 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:12:49.526 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:12:49.526 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:12:49.527 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:12:49.527 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:12:49.528 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 127 ms. Found 0 Redis repository interfaces.
2025-07-06 21:12:51.400 [ WARN] [main] org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mongoConfig' defined in file [/Users/ssddo/study/pulse-back/build/classes/java/main/pulse/back/common/config/MongoConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'mongoMappingContext' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataConfiguration.class]: Unsatisfied dependency expressed through method 'mongoMappingContext' parameter 1: Error creating bean with name 'mongoConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-07-06 21:12:51.735 [ INFO] [main] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-06 21:12:52.374 [ERROR] [main] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  mongoConfig defined in file [/Users/ssddo/study/pulse-back/build/classes/java/main/pulse/back/common/config/MongoConfig.class]
↑     ↓
|  mongoMappingContext defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataConfiguration.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2025-07-06 21:13:05.908 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 84321 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 21:13:05.915 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 21:13:09.098 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:13:09.102 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 21:13:09.471 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 363 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 21:13:10.149 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:13:10.151 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 21:13:10.237 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:13:10.238 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:13:10.240 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:13:10.241 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:13:10.241 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:13:10.241 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:13:10.241 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:13:10.242 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 82 ms. Found 0 Redis repository interfaces.
2025-07-06 21:13:11.843 [ WARN] [main] org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mongoConfig' defined in file [/Users/ssddo/study/pulse-back/build/classes/java/main/pulse/back/common/config/MongoConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'mongoMappingContext' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataConfiguration.class]: Unsatisfied dependency expressed through method 'mongoMappingContext' parameter 1: Error creating bean with name 'mongoConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-07-06 21:13:11.889 [ INFO] [main] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-06 21:13:12.205 [ERROR] [main] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  mongoConfig defined in file [/Users/ssddo/study/pulse-back/build/classes/java/main/pulse/back/common/config/MongoConfig.class]
↑     ↓
|  mongoMappingContext defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataConfiguration.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2025-07-06 21:14:03.192 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 84862 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 21:14:03.197 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 21:14:05.959 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:14:05.963 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 21:14:06.512 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 541 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 21:14:07.257 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:14:07.259 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 21:14:07.342 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:07.344 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:07.346 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:07.347 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:07.347 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:07.347 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:07.347 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:07.348 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 81 ms. Found 0 Redis repository interfaces.
2025-07-06 21:14:09.090 [ WARN] [main] org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'mongoConfig' defined in file [/Users/ssddo/study/pulse-back/build/classes/java/main/pulse/back/common/config/MongoConfig.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'mongoMappingContext' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataConfiguration.class]: Unsatisfied dependency expressed through method 'mongoMappingContext' parameter 1: Error creating bean with name 'mongoConfig': Requested bean is currently in creation: Is there an unresolvable circular reference?
2025-07-06 21:14:09.346 [ INFO] [main] org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-07-06 21:14:09.455 [ERROR] [main] org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The dependencies of some of the beans in the application context form a cycle:

┌─────┐
|  mongoConfig defined in file [/Users/ssddo/study/pulse-back/build/classes/java/main/pulse/back/common/config/MongoConfig.class]
↑     ↓
|  mongoMappingContext defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDataConfiguration.class]
└─────┘


Action:

Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to true.

2025-07-06 21:14:44.879 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 85304 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 21:14:44.885 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 21:14:47.705 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:14:47.708 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 21:14:48.100 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 381 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 21:14:48.893 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:14:48.894 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 21:14:48.988 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:48.990 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:48.992 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:48.993 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:48.993 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:48.993 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:48.994 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:14:48.994 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 91 ms. Found 0 Redis repository interfaces.
2025-07-06 21:14:52.988 [ INFO] [cluster-ClusterId{value='686a68bce2d14f401b058ae2', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 21:14:52.997 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5fb7ab9c, com.mongodb.Jep395RecordCodecProvider@6734ff92, com.mongodb.KotlinCodecProvider@51eb0e84]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 21:14:53.045 [ INFO] [cluster-ClusterId{value='686a68bce2d14f401b058ae2', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 21:14:53.066 [ INFO] [cluster-ClusterId{value='686a68bce2d14f401b058ae2', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 21:14:55.174 [ INFO] [cluster-ClusterId{value='686a68bce2d14f401b058ae2', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1449237709, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 21:14:55 KST 2025, lastUpdateTimeNanos=941351040848249}
2025-07-06 21:14:55.174 [ INFO] [cluster-ClusterId{value='686a68bce2d14f401b058ae2', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1443350833, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 21:14:55 KST 2025, lastUpdateTimeNanos=941351040848208}
2025-07-06 21:14:55.174 [ INFO] [cluster-ClusterId{value='686a68bce2d14f401b058ae2', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1457363709, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 21:14:55 KST 2025, lastUpdateTimeNanos=941351047565749}
2025-07-06 21:14:55.189 [ INFO] [cluster-ClusterId{value='686a68bce2d14f401b058ae2', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 21:14:58.813 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 21:14:58.863 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 15.901 seconds (process running for 17.369)
2025-07-06 21:15:58.496 [ INFO] [main] pulse.back.BackApplication - Starting BackApplication using Java 21.0.4 with PID 86076 (/Users/ssddo/study/pulse-back/build/classes/java/main started by ssddo in /Users/ssddo/study/pulse-back)
2025-07-06 21:15:58.502 [ INFO] [main] pulse.back.BackApplication - The following 1 profile is active: "private"
2025-07-06 21:16:00.819 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:16:00.823 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.
2025-07-06 21:16:01.174 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 344 ms. Found 7 Reactive MongoDB repository interfaces.
2025-07-06 21:16:01.839 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-07-06 21:16:01.840 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-07-06 21:16:01.928 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.CategoryRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:16:01.930 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.ItemRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:16:01.932 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MemberRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:16:01.932 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoInfoRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:16:01.932 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MentoringRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:16:01.932 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.common.repository.MetaRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:16:01.932 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface pulse.back.domain.admin.terms.TermsRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-07-06 21:16:01.933 [ INFO] [main] org.springframework.data.repository.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 83 ms. Found 0 Redis repository interfaces.
2025-07-06 21:16:05.013 [ INFO] [cluster-ClusterId{value='686a69048f711616a2a5fb92', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-00.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 21:16:05.034 [ INFO] [main] org.mongodb.driver.client - MongoClient with metadata {"driver": {"name": "mongo-java-driver|reactive-streams", "version": "4.11.2"}, "os": {"type": "Darwin", "name": "Mac OS X", "architecture": "x86_64", "version": "14.5"}, "platform": "Java/Oracle Corporation/21.0.4+8-LTS-jvmci-23.1-b41"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='ssddo', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, streamFactoryFactory=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@1e56bc9b, com.mongodb.Jep395RecordCodecProvider@6f3bd37f, com.mongodb.KotlinCodecProvider@403364e9]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=cluster.0mtmr.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-2baa9v-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=UNSPECIFIED, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null}
2025-07-06 21:16:05.057 [ INFO] [cluster-ClusterId{value='686a69048f711616a2a5fb92', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-02.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 21:16:05.103 [ INFO] [cluster-ClusterId{value='686a69048f711616a2a5fb92', description='null'}-srv-cluster.0mtmr.mongodb.net] org.mongodb.driver.cluster - Adding discovered server cluster-shard-00-01.0mtmr.mongodb.net:27017 to client view of cluster
2025-07-06 21:16:06.799 [ INFO] [cluster-ClusterId{value='686a69048f711616a2a5fb92', description='null'}-cluster-shard-00-00.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-00.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1187065208, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-00.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655a449e35823382d350e1, counter=4}, lastWriteDate=Sun Jul 06 21:16:06 KST 2025, lastUpdateTimeNanos=941422697573458}
2025-07-06 21:16:06.799 [ INFO] [cluster-ClusterId{value='686a69048f711616a2a5fb92', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-02.0mtmr.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1188877291, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-02.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000091, setVersion=12, topologyVersion=TopologyVersion{processId=68655d1637b4a5b4b2362af0, counter=6}, lastWriteDate=Sun Jul 06 21:16:06 KST 2025, lastUpdateTimeNanos=941422697622624}
2025-07-06 21:16:06.799 [ INFO] [cluster-ClusterId{value='686a69048f711616a2a5fb92', description='null'}-cluster-shard-00-01.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Monitor thread successfully connected to server with description ServerDescription{address=cluster-shard-00-01.0mtmr.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1202209708, setName='atlas-2baa9v-shard-0', canonicalAddress=cluster-shard-00-01.0mtmr.mongodb.net:27017, hosts=[cluster-shard-00-00.0mtmr.mongodb.net:27017, cluster-shard-00-01.0mtmr.mongodb.net:27017, cluster-shard-00-02.0mtmr.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-shard-00-02.0mtmr.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='apne2-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_NORTHEAST_2'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=12, topologyVersion=TopologyVersion{processId=68655f7a69b11bb5e9ae3caf, counter=3}, lastWriteDate=Sun Jul 06 21:16:06 KST 2025, lastUpdateTimeNanos=941422711201833}
2025-07-06 21:16:06.812 [ INFO] [cluster-ClusterId{value='686a69048f711616a2a5fb92', description='null'}-cluster-shard-00-02.0mtmr.mongodb.net:27017] org.mongodb.driver.cluster - Discovered replica set primary cluster-shard-00-02.0mtmr.mongodb.net:27017 with max election id 7fffffff0000000000000091 and max set version 12
2025-07-06 21:16:10.880 [ INFO] [main] org.springframework.boot.web.embedded.netty.NettyWebServer - Netty started on port 8080
2025-07-06 21:16:10.932 [ INFO] [main] pulse.back.BackApplication - Started BackApplication in 14.068 seconds (process running for 15.473)
2025-07-06 21:16:21.297 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 21:16:21.370 [DEBUG] [reactor-http-nio-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 21:16:22.132 [DEBUG] [async-channel-group-0-handler-executor] org.springframework.data.mongodb.core.ReactiveMongoTemplate - Inserting Document containing fields: [_id, email, password, phoneNumber, name, nickName, memberRole, createdAt] in collection: member
2025-07-06 21:16:43.159 [ INFO] [reactor-http-nio-4] pulse.back.domain.member.MemberController - requestDto : MemberLoginRequestDto[email=0524@test.com, password=qwer1234!]
2025-07-06 21:16:43.187 [DEBUG] [reactor-http-nio-4] org.springframework.data.mongodb.repository.query.MongoQueryCreator - Created query Query: { "email" : "0524@test.com"}, Fields: {}, Sort: {}
2025-07-06 21:16:43.189 [DEBUG] [reactor-http-nio-4] org.springframework.data.mongodb.core.ReactiveMongoTemplate - find using query: { "email" : "0524@test.com"} fields: Document{{}} for class: class pulse.back.entity.member.Member in collection: member
2025-07-06 21:17:34.794 [DEBUG] [parallel-3] org.springframework.data.mongodb.core.ReactiveMongoTemplate - exists: { "memberId" : { "$oid" : "686a69158f711616a2a5fb93"}} in collection: mentoInfo
