name: pulse
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
permissions:
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 22
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'temurin'
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Clear Gradle cache
        run: ./gradlew clean
      - name: Build with Gradle
        run: ./gradlew build
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: trelloServer
          path: build/libs/back-0.0.1-SNAPSHOT.jar
          if-no-files-found: error  # 파일이 없으면 실패하도록 설정
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: trelloServer
          path: build/libs/
      - name: Cleanup old artifacts
        run: gh run list --limit 100 --json artifacts | jq -r '.[] | .artifacts[] | select(.expired == true) | .id' | xargs -I{} gh artifact delete {} --confirm
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: trelloServer
          path: build/libs/
      # Deploy to EC2 부분 수정
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          
          # JAR 파일 전송
          scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/back-0.0.1-SNAPSHOT.jar ec2-user@13.209.104.215:/home/ec2-user/back-0.0.1-SNAPSHOT.jar
          
          # 시작 스크립트 생성 및 전송
          cat > start-application.sh << EOF
          #!/bin/bash
          
          # 기존 프로세스 종료
          pgrep java | xargs kill -9 || true
          
          # 애플리케이션 실행
          nohup java --add-opens java.base/java.io=ALL-UNNAMED \
            --add-opens java.base/java.lang=ALL-UNNAMED \
            --add-opens java.base/java.util=ALL-UNNAMED \
            --add-opens java.base/java.lang.reflect=ALL-UNNAMED \
            -jar /home/ec2-user/back-0.0.1-SNAPSHOT.jar \
            --geocoding.client-id=${{ secrets.NAVER_CLIENT_ID }} \
            --geocoding.client-secret=${{ secrets.NAVER_CLIENT_SECRET }} \
            --aws.access-key=${{ secrets.AWS_ACCESS_KEY }} \
            --aws.secret-key=${{ secrets.AWS_SECRET_KEY }} \
            > /home/ec2-user/app.log 2>&1 &
          
          # PID 파일에 저장
          echo \$! > /home/ec2-user/application.pid
          
          # 로그 확인
          sleep 10
          ps -ef | grep java
          tail -n 20 /home/ec2-user/app.log
          EOF
          
          scp -i private_key.pem -o StrictHostKeyChecking=no start-application.sh ec2-user@13.209.104.215:/home/ec2-user/start-application.sh
          
          # 스크립트 실행 권한 부여 및 실행
          ssh -i private_key.pem -o StrictHostKeyChecking=no ec2-user@13.209.104.215 "
            chmod +x /home/ec2-user/start-application.sh
            /home/ec2-user/start-application.sh
          "
          
          # 임시 파일 정리
          rm -f private_key.pem
          rm -f start-application.sh
