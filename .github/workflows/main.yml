# 워크 플로우 이름
name: pulse

# 워크 플로우가 언제 실행될지를 정의한다.
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 워크플로우가 깃 레포에 대한 권한을 읽기만 가능하게 설정한다.
permissions:
  contents: read

# 워크플로우에서 할 작업 정의한다.
jobs:
  # 작업 환경 = 우분투 최신 버전
  build:
    runs-on: ubuntu-latest

    # 깃허브에서 제공하는 checkout 엑션 사용
    steps:
      - uses: actions/checkout@v3

      # JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # gradle wrapper 파일에 실행 권한을 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Gradle 캐시 클리어
      - name: Clear Gradle cache
        run: ./gradlew clean

      # Gradle 빌드 시 디버깅 정보 출력
      - name: Build with Gradle
        run: ./gradlew build --info

      # 빌드해서 생긴 JAR 파일을 깃허브 아티팩트로 업로드
      - name: Upload build artifact
        uses: actions/upload-artifact@v3  # v3로 업데이트
        with:
          name: trelloServer
          path: build/libs/back-0.0.1-SNAPSHOT.jar  # JAR 파일 경로를 올바르게 설정

  # 배포
  deploy:
    needs: build
    runs-on: ubuntu-latest

    # 위의 빌드작업한 JAR 파일 = 아티팩트를 다운로드
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3  # v3로 업데이트
        with:
          name: trelloServer
          path: build/libs/

      # EC2에 배포
      - name: Deploy to EC2
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem
          # JAR 파일이 존재하는지 확인
          ls -l build/libs/  # 여기서 JAR 파일이 있는지 확인
          scp -i private_key.pem -o StrictHostKeyChecking=no build/libs/back-0.0.1-SNAPSHOT.jar ec2-user@13.209.104.215:/home/ec2-user/back-0.0.1-SNAPSHOT.jar
          ssh -i private_key.pem -o StrictHostKeyChecking=no ec2-user@13.209.104.215 "pgrep java | xargs kill -9; nohup java -jar /home/ec2-user/back-0.0.1-SNAPSHOT.jar > app.log 2>&1 &"
          rm -f private_key.pem
